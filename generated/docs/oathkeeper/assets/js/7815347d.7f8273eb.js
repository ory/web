(self.webpackChunkdocusaurus_template=self.webpackChunkdocusaurus_template||[]).push([[6300],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return c},kt:function(){return h}});var a=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=a.createContext({}),u=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},c=function(e){var n=u(e.components);return a.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=u(t),h=i,m=d["".concat(s,".").concat(h)]||d[h]||p[h]||o;return t?a.createElement(m,r(r({ref:n},c),{},{components:t})):a.createElement(m,r({ref:n},c))}));function h(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,r=new Array(o);r[0]=d;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,r[1]=l;for(var u=2;u<o;u++)r[u]=t[u];return a.createElement.apply(null,r)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},4222:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return u},toc:function(){return c},default:function(){return d}});var a=t(2122),i=t(9756),o=(t(7294),t(3905)),r=["components"],l={id:"authn",title:"Authenticators"},s=void 0,u={unversionedId:"pipeline/authn",id:"version-v0.37/pipeline/authn",isDocsHomePage:!1,title:"Authenticators",description:"An authenticator is responsible for authenticating request credentials. ORY",source:"@site/versioned_docs/version-v0.37/pipeline/authn.md",sourceDirName:"pipeline",slug:"/pipeline/authn",permalink:"/oathkeeper/docs/v0.37/pipeline/authn",editUrl:"https://github.com/ory/oathkeeper/edit/master/docs/versioned_docs/version-v0.37/pipeline/authn.md",version:"v0.37",lastUpdatedBy:"Arthur Knoepflin",lastUpdatedAt:1614703381,formattedLastUpdatedAt:"3/2/2021",frontMatter:{id:"authn",title:"Authenticators"},sidebar:"version-v0.37/docs",previous:{title:"Access Rule Pipeline",permalink:"/oathkeeper/docs/v0.37/pipeline/index"},next:{title:"Authorizers",permalink:"/oathkeeper/docs/v0.37/pipeline/authz"}},c=[{value:"<code>noop</code>",id:"noop",children:[{value:"Configuration",id:"configuration",children:[]},{value:"Access Rule Example",id:"access-rule-example",children:[]}]},{value:"<code>unauthorized</code>",id:"unauthorized",children:[{value:"Configuration",id:"configuration-1",children:[]},{value:"Access Rule Example",id:"access-rule-example-1",children:[]}]},{value:"<code>anonymous</code>",id:"anonymous",children:[{value:"Configuration",id:"configuration-2",children:[]},{value:"Access Rule Example",id:"access-rule-example-2",children:[]}]},{value:"<code>cookie_session</code>",id:"cookie_session",children:[{value:"Configuration",id:"configuration-3",children:[]},{value:"Access Rule Example",id:"access-rule-example-3",children:[]}]},{value:"<code>oauth2_client_credentials</code>",id:"oauth2_client_credentials",children:[{value:"Configuration",id:"configuration-4",children:[]},{value:"Access Rule Example",id:"access-rule-example-4",children:[]}]},{value:"<code>oauth2_introspection</code>",id:"oauth2_introspection",children:[{value:"Configuration",id:"configuration-5",children:[]},{value:"Access Rule Example",id:"access-rule-example-5",children:[]}]},{value:"<code>jwt</code>",id:"jwt",children:[{value:"Configuration",id:"configuration-6",children:[]},{value:"Scope",id:"scope",children:[]},{value:"Access Rule Example",id:"access-rule-example-6",children:[]}]}],p={toc:c};function d(e){var n=e.components,t=(0,i.Z)(e,r);return(0,o.kt)("wrapper",(0,a.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"An authenticator is responsible for authenticating request credentials. ORY\nOathkeeper supports different authenticators and we will add more as the project\nprogresses."),(0,o.kt)("p",null,'An authenticator inspects the HTTP request (e.g. the HTTP Authorization Header)\nand executes some business logic that returns true (for authentication ok) or\nfalse (for authentication invalid) as well as a subject ("user"). The subject is\ntypically the "user" that made the request, but it could also be a machine (if\nyou have machine-2-machine interaction) or something different.'),(0,o.kt)("p",null,"Each authenticator has two keys:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"handler")," (string, required): Defines the handler (e.g. ",(0,o.kt)("inlineCode",{parentName:"li"},"noop"),") to be used."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"config")," (object, optional): Configures the handler. Configuration keys vary\nper handler. The configuration can be defined in the global configuration\nfile, or per access rule.")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Example")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "authenticators": [\n    {\n      "handler": "noop",\n      "config": {}\n    }\n  ]\n}\n')),(0,o.kt)("p",null,"You can define more than one authenticator in the Access Rule. The first\nauthenticator that is able to handle the credentials will be consulted and other\nauthenticators will be ignored:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "authenticators": [\n    {\n      "handler": "a"\n    },\n    {\n      "handler": "b"\n    },\n    {\n      "handler": "c"\n    }\n  ]\n}\n')),(0,o.kt)("p",null,"If handler ",(0,o.kt)("inlineCode",{parentName:"p"},"a")," is able to handle the provided credentials, then handler ",(0,o.kt)("inlineCode",{parentName:"p"},"b")," and\n",(0,o.kt)("inlineCode",{parentName:"p"},"c")," will be ignored. If handler ",(0,o.kt)("inlineCode",{parentName:"p"},"a")," can not handle the provided credentials but\nhandler ",(0,o.kt)("inlineCode",{parentName:"p"},"b")," can, then handler ",(0,o.kt)("inlineCode",{parentName:"p"},"a")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"c")," will be ignored. Handling the provided\ncredentials means that the authenticator knows how to handle, for example, the\n",(0,o.kt)("inlineCode",{parentName:"p"},"Authorization: basic")," header. It does not mean that the credentials are valid!\nIf a handler encounters invalid credentials, then other handlers will be ignored\ntoo."),(0,o.kt)("h2",{id:"noop"},(0,o.kt)("inlineCode",{parentName:"h2"},"noop")),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"noop")," handler tells ORY Oathkeeper to bypass authentication, authorization,\nand mutation. This implies that no authorization will be executed and no\ncredentials will be issued. It's basically a pass-all authenticator that allows\nany request to be forwarded to the upstream URL."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Using this handler is basically an allow-all configuration. It makes sense\nwhen the upstream handles access control itself or does not need any type of\naccess control.")),(0,o.kt)("h3",{id:"configuration"},"Configuration"),(0,o.kt)("p",null,"This handler is not configurable."),(0,o.kt)("p",null,"To enable this handler, set:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"# Global configuration file oathkeeper.yml\nauthenticators:\n  noop:\n    # Set enabled to true if the authenticator should be enabled and false to disable the authenticator. Defaults to false.\n    enabled: true\n")),(0,o.kt)("h3",{id:"access-rule-example"},"Access Rule Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},'$ cat ./rules.json\n\n[{\n  "id": "some-id",\n  "upstream": {\n    "url": "http://my-backend-service"\n  },\n  "match": {\n    "url": "http://my-app/some-route",\n    "methods": [\n      "GET"\n    ]\n  },\n  "authenticators": [{\n    "handler": "noop"\n  }]\n}]\n\n$ curl -X GET http://my-app/some-route\n\nHTTP/1.0 200 Status OK\nThe request has been allowed!\n')),(0,o.kt)("h2",{id:"unauthorized"},(0,o.kt)("inlineCode",{parentName:"h2"},"unauthorized")),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"unauthorized")," handler tells ORY Oathkeeper to reject all requests as\nunauthorized."),(0,o.kt)("h3",{id:"configuration-1"},"Configuration"),(0,o.kt)("p",null,"This handler is not configurable."),(0,o.kt)("p",null,"To enable this handler, set:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"# Global configuration file oathkeeper.yml\nunauthorized:\n  noop:\n    # Set enabled to true if the authenticator should be enabled and false to disable the authenticator. Defaults to false.\n    enabled: true\n")),(0,o.kt)("h3",{id:"access-rule-example-1"},"Access Rule Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},'$ cat ./rules.json\n\n[{\n  "id": "some-id",\n  "upstream": {\n    "url": "http://my-backend-service"\n  },\n  "match": {\n    "url": "http://my-app/some-route",\n    "methods": [\n      "GET"\n    ]\n  },\n  "authenticators": [{\n    "handler": "unauthorized"\n  }]\n}]\n\n$ curl -X GET http://my-app/some-route\n\nHTTP/1.0 401 Unauthorized\n')),(0,o.kt)("h2",{id:"anonymous"},(0,o.kt)("inlineCode",{parentName:"h2"},"anonymous")),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"anonymous")," authenticator checks whether or not an ",(0,o.kt)("inlineCode",{parentName:"p"},"Authorization")," header is\nset. If not, it will set the subject to ",(0,o.kt)("inlineCode",{parentName:"p"},"anonymous"),"."),(0,o.kt)("h3",{id:"configuration-2"},"Configuration"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"subject"),' (string, optional) - Sets the anonymous username. Defaults to\n"anonymous". Common names include "guest", "anon", "anonymous", "unknown".')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"# Global configuration file oathkeeper.yml\nauthenticators:\n  anonymous:\n    # Set enabled to true if the authenticator should be enabled and false to disable the authenticator. Defaults to false.\n    enabled: true\n\n    config:\n      subject: guest\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"# Some Access Rule: access-rule-1.yaml\nid: access-rule-1\n# match: ...\n# upstream: ...\nauthenticators:\n  - handler: anonymous\n    config:\n      subject: guest\n")),(0,o.kt)("h3",{id:"access-rule-example-2"},"Access Rule Example"),(0,o.kt)("p",null,"The following rule allows all requests to ",(0,o.kt)("inlineCode",{parentName:"p"},"GET http://my-app/some-route")," and\nsets the subject name to the anonymous username, as long as no ",(0,o.kt)("inlineCode",{parentName:"p"},"Authorization"),"\nheader is set in the HTTP request:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},'$ cat ./rules.json\n\n[{\n  "id": "some-id",\n  "upstream": {\n    "url": "http://my-backend-service"\n  },\n  "match": {\n    "url": "http://my-app/some-route",\n    "methods": [\n      "GET"\n    ]\n  },\n  "authenticators": [{\n    "handler": "anonymous"\n  }],\n  "authorizer": { "handler": "allow" },\n  "mutators": [{ "handler": "noop" }]\n}]\n\n$ curl -X GET http://my-app/some-route\n\nHTTP/1.0 200 Status OK\nThe request has been allowed! The subject is: "anonymous"\n\n$ curl -X GET -H "Authorization: Bearer foobar" http://my-app/some-route\n\nHTTP/1.0 401 Status Unauthorized\nThe request is not authorized because credentials have been provided but only the anonymous\nauthenticator is enabled for this URL.\n')),(0,o.kt)("h2",{id:"cookie_session"},(0,o.kt)("inlineCode",{parentName:"h2"},"cookie_session")),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"cookie_session")," authenticator will forward the request method, path and\nheaders to a session store. If the session store returns ",(0,o.kt)("inlineCode",{parentName:"p"},"200 OK")," and body\n",(0,o.kt)("inlineCode",{parentName:"p"},'{ "subject": "...", "extra": {} }')," then the authenticator will set the subject\nappropriately."),(0,o.kt)("h3",{id:"configuration-3"},"Configuration"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"check_session_url")," (string, required) - The session store to forward request\nmethod/path/headers to for validation."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"only")," ([]string, optional) - If set, only requests that have at least one of\nthe set cookies will be forwarded, others will be passed to the next\nauthenticator. If unset, all requests are forwarded."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"preserve_path")," (boolean, optional) - If set, any path in ",(0,o.kt)("inlineCode",{parentName:"li"},"check_session_url"),"\nwill be preserved instead of replacing the path with the path of the request\nbeing checked."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"extra_from")," (string, optional - defaults to ",(0,o.kt)("inlineCode",{parentName:"li"},"extra"),") - A\n",(0,o.kt)("a",{parentName:"li",href:"https://github.com/tidwall/gjson/blob/master/SYNTAX.md"},"GJSON Path")," pointing\nto the ",(0,o.kt)("inlineCode",{parentName:"li"},"extra")," field. This defaults to ",(0,o.kt)("inlineCode",{parentName:"li"},"extra"),", but it could also be ",(0,o.kt)("inlineCode",{parentName:"li"},"@this"),"\n(for the root element), ",(0,o.kt)("inlineCode",{parentName:"li"},"session.foo.bar")," for\n",(0,o.kt)("inlineCode",{parentName:"li"},'{ "subject": "...", "session": { "foo": {"bar": "whatever"} } }'),", and so on."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"subject_from")," (string, optional - defaults to ",(0,o.kt)("inlineCode",{parentName:"li"},"subject"),") - A\n",(0,o.kt)("a",{parentName:"li",href:"https://github.com/tidwall/gjson/blob/master/SYNTAX.md"},"GJSON Path")," pointing\nto the ",(0,o.kt)("inlineCode",{parentName:"li"},"subject")," field. This defaults to ",(0,o.kt)("inlineCode",{parentName:"li"},"subject"),". Example: ",(0,o.kt)("inlineCode",{parentName:"li"},"identity.id")," for\n",(0,o.kt)("inlineCode",{parentName:"li"},'{ "identity": { "id": "1234" } }'),".")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"# Global configuration file oathkeeper.yml\nauthenticators:\n  cookie_session:\n    # Set enabled to true if the authenticator should be enabled and false to disable the authenticator. Defaults to false.\n    enabled: true\n\n    config:\n      check_session_url: https://session-store-host\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"# Some Access Rule: access-rule-1.yaml\nid: access-rule-1\n# match: ...\n# upstream: ...\nauthenticators:\n  - handler: cookie_session\n    config:\n      check_session_url: https://session-store-host\n      only:\n        - sessionid\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"# Some Access Rule Preserving Path: access-rule-2.yaml\nid: access-rule-2\n# match: ...\n# upstream: ...\nauthenticators:\n  - handler: cookie_session\n    config:\n      check_session_url: https://session-store-host/check-session\n      only:\n        - sessionid\n      preserve_path: true\n")),(0,o.kt)("h3",{id:"access-rule-example-3"},"Access Rule Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},'$ cat ./rules.json\n\n[{\n  "id": "some-id",\n  "upstream": {\n    "url": "http://my-backend-service"\n  },\n  "match": {\n    "url": "http://my-app/some-route",\n    "methods": [\n      "GET"\n    ]\n  },\n  "authenticators": [{\n    "handler": "cookie_session"\n  }],\n  "authorizer": { "handler": "allow" },\n  "mutators": [{ "handler": "noop" }]\n}]\n\n$ curl -X GET -b sessionid=abc http://my-app/some-route\n\nHTTP/1.0 200 OK\nThe request has been allowed! The subject is: "peter"\n\n$ curl -X GET -b sessionid=def http://my-app/some-route\n\nHTTP/1.0 401 Status Unauthorized\nThe request is not authorized because the provided credentials are invalid.\n')),(0,o.kt)("h2",{id:"oauth2_client_credentials"},(0,o.kt)("inlineCode",{parentName:"h2"},"oauth2_client_credentials")),(0,o.kt)("p",null,"This ",(0,o.kt)("inlineCode",{parentName:"p"},"oauth2_client_credentials")," uses the username and password from HTTP Basic\nAuthorization (",(0,o.kt)("inlineCode",{parentName:"p"},"Authorization: Basic base64(<username:password>)")," to perform the\nOAuth 2.0 Client Credentials grant in order to detect if the provided\ncredentials are valid."),(0,o.kt)("p",null,"This authenticator will use the username from the HTTP Basic Authorization\nheader as the subject for this request."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"If you are unfamiliar with OAuth 2.0 Client Credentials we recommend\n",(0,o.kt)("a",{parentName:"p",href:"https://www.oauth.com/oauth2-servers/access-tokens/client-credentials/"},"reading this guide"),".")),(0,o.kt)("h3",{id:"configuration-4"},"Configuration"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"token_url")," (string, required) - The OAuth 2.0 Token Endpoint that will be\nused to validate the client credentials."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"required_scope")," ([]string, optional) - Sets what scope is required by the URL\nand when making performing OAuth 2.0 Client Credentials request, the scope\nwill be included in the request:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"# Global configuration file oathkeeper.yml\nauthenticators:\n  oauth2_client_credentials:\n    # Set enabled to true if the authenticator should be enabled and false to disable the authenticator. Defaults to false.\n    enabled: true\n\n    config:\n      token_url: https://my-website.com/oauth2/token\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"# Some Access Rule: access-rule-1.yaml\nid: access-rule-1\n# match: ...\n# upstream: ...\nauthenticators:\n  - handler: oauth2_client_credentials\n    config:\n      token_url: https://my-website.com/oauth2/token\n")),(0,o.kt)("h3",{id:"access-rule-example-4"},"Access Rule Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},'$ cat ./rules.json\n\n[{\n  "id": "some-id",\n  "upstream": {\n    "url": "http://my-backend-service"\n  },\n  "match": {\n    "url": "http://my-app/some-route",\n    "methods": [\n      "GET"\n    ]\n  },\n  "authenticators": [{\n    "handler": "oauth2_client_credentials",\n    "config": {\n      "required_scope": ["scope-a", "scope-b"]\n    }\n  }],\n  "authorizer": { "handler": "allow" },\n  "mutators": [{ "handler": "noop" }]\n}]\n\n$ curl -X GET http://my-app/some-route\n\nHTTP/1.0 401 Status Unauthorized\nThe request is not authorized because no credentials have been provided.\n\n$ curl -X GET --user idonotexist:whatever http://my-app/some-route\n\nHTTP/1.0 401 Status Unauthorized\nThe request is not authorized because the provided credentials are invalid.\n\n$ curl -X GET --user peter:somesecret http://my-app/some-route\n\nHTTP/1.0 200 OK\nThe request has been allowed! The subject is: "peter"\n')),(0,o.kt)("p",null,"In the background, a request to the OAuth 2.0 Token Endpoint (value of\n",(0,o.kt)("inlineCode",{parentName:"p"},"authenticators.oauth2_client_credentials.token_url"),") will be made, using the\nOAuth 2.0 Client Credentials Grant:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"POST /oauth2/token HTTP/1.1\nHost: authorization-server.com\n\ngrant_type=client_credentials\n&client_id=peter\n&client_secret=somesecret\n&scope=scope-a+scope-b\n")),(0,o.kt)("p",null,"If the request succeeds, the credentials are considered valid and if the request\nfails, the credentials are considered invalid."),(0,o.kt)("h2",{id:"oauth2_introspection"},(0,o.kt)("inlineCode",{parentName:"h2"},"oauth2_introspection")),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"oauth2_introspection")," authenticator handles requests that have an Bearer\nToken in the Authorization Header (",(0,o.kt)("inlineCode",{parentName:"p"},"Authorization: bearer <token>"),") or in a\ndifferent header or query parameter specified in configuration. It then uses\nOAuth 2.0 Token Introspection to check if the token is valid and if the token\nwas granted the requested scope."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"If you are unfamiliar with OAuth 2.0 Introspection we recommend\n",(0,o.kt)("a",{parentName:"p",href:"https://www.oauth.com/oauth2-servers/token-introspection-endpoint/"},"reading this guide"),".")),(0,o.kt)("h3",{id:"configuration-5"},"Configuration"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"introspection_url")," (string, required) - The OAuth 2.0 Token Introspection\nendpoint."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"scope_strategy"),' (string, optional) - Sets the strategy to be used to\nvalidate/match the token scope. Supports "hierarchic", "exact", "wildcard",\n"none". Defaults to "none".'),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"required_scope")," ([]string, optional) - Sets what scope is required by the URL\nand when performing OAuth 2.0 Client Credentials request, the scope\nwill be included in the request."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"target_audience")," ([]string, optional) - Sets what audience is required by the\nURL."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"trusted_issuers")," ([]string, optional) - Sets a list of trusted token issuers."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"pre_authorization")," (object, optional) - Enable pre-authorization in cases\nwhere the OAuth 2.0 Token Introspection endpoint is protected by OAuth 2.0\nBearer Tokens that can be retrieved using the OAuth 2.0 Client Credentials\ngrant.",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"enabled")," (bool, optional) - Enable pre-authorization. Defaults to false."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"client_id")," (string, required if enabled) - The OAuth 2.0 Client ID to be\nused for the OAuth 2.0 Client Credentials Grant."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"client_secret")," (string, required if enabled) - The OAuth 2.0 Client Secret\nto be used for the OAuth 2.0 Client Credentials Grant."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"token_url")," (string, required if enabled) - The OAuth 2.0 Scope to be\nrequested during the OAuth 2.0 Client Credentials Grant."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"scope")," ([]string, optional) - The OAuth 2.0 Token Endpoint where the OAuth\n2.0 Client Credentials Grant will be performed."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"token_from")," (object, optional) - The location of the bearer token. If not\nconfigured, the token will be received from a default location -\n'Authorization' header. One and only one location (header, query, or cookie)\nmust be specified.",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"header")," (string, required, one of) - The header (case insensitive) that\nmust contain a Bearer token for request authentication. It can't be set\nalong with ",(0,o.kt)("inlineCode",{parentName:"li"},"query_parameter")," or ",(0,o.kt)("inlineCode",{parentName:"li"},"cookie"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"query_parameter")," (string, required, one of) - The query parameter (case\nsensitive) that must contain a Bearer token for request authentication. It\ncan't be set along with ",(0,o.kt)("inlineCode",{parentName:"li"},"header")," or ",(0,o.kt)("inlineCode",{parentName:"li"},"cookie"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"cookie")," (string, required, one of) - The cookie (case sensitive) that must\ncontain a Bearer token for request authentication. It can't be set along\nwith ",(0,o.kt)("inlineCode",{parentName:"li"},"header")," or ",(0,o.kt)("inlineCode",{parentName:"li"},"query_parameter")))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"introspection_request_headers")," (object, optional) - Additional headers to add\nto the introspection request."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"retry")," (object, optional) - Configure the retry policy",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"max_delay")," (string, optional, default to 500ms) - Maximum delay to wait before\nretrying the request"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"give_up_after")," (string, optional, default to 1s) - Maximum delay allowed for\nretries")))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"# Global configuration file oathkeeper.yml\nauthenticators:\n  oauth2_introspection:\n    # Set enabled to true if the authenticator should be enabled and false to disable the authenticator. Defaults to false.\n    enabled: true\n\n    config:\n      introspection_url: https://my-website.com/oauth2/introspection\n      scope_strategy: exact\n      required_scope:\n        - photo\n        - profile\n      target_audience:\n        - example_audience\n      trusted_issuers:\n        - https://my-website.com/\n      pre_authorization:\n        enabled: true\n        client_id: some_id\n        client_secret: some_secret\n        scope:\n          - introspect\n        token_url: https://my-website.com/oauth2/token\n      token_from:\n        header: Custom-Authorization-Header\n        # or\n        # query_parameter: auth-token\n        # or\n        # cookie: auth-token\n      introspection_request_headers:\n        x-forwarded-proto: https\n      retry:\n        max_delay: 300ms\n        give_up_after: 2s\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"# Some Access Rule: access-rule-1.yaml\nid: access-rule-1\n# match: ...\n# upstream: ...\nauthenticators:\n  - handler: oauth2_introspection\n    config:\n      introspection_url: https://my-website.com/oauth2/introspection\n      scope_strategy: exact\n      required_scope:\n        - photo\n        - profile\n      target_audience:\n        - example_audience\n      trusted_issuers:\n        - https://my-website.com/\n      pre_authorization:\n        enabled: true\n        client_id: some_id\n        client_secret: some_secret\n        scope:\n          - introspect\n        token_url: https://my-website.com/oauth2/token\n      token_from:\n        query_parameter: auth-token\n        # or\n        # header: Custom-Authorization-Header\n        # or\n        # cookie: auth-token\n      introspection_request_headers:\n        x-forwarded-proto: https\n        x-foo: bar\n      retry:\n        max_delay: 300ms\n        give_up_after: 2s\n")),(0,o.kt)("h3",{id:"access-rule-example-5"},"Access Rule Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},'$ cat ./rules.json\n\n[{\n  "id": "some-id",\n  "upstream": {\n    "url": "http://my-backend-service"\n  },\n  "match": {\n    "url": "http://my-app/some-route",\n    "methods": [\n      "GET"\n    ]\n  },\n  "authenticators": [{\n    "handler": "oauth2_introspection",\n    "config": {\n      "required_scope": ["scope-a", "scope-b"],\n      "target_audience": ["example_audience"]\n    }\n  }],\n  "authorizer": { "handler": "allow" },\n  "mutators": [{ "handler": "noop" }]\n}]\n\n$ curl -X GET http://my-app/some-route\n\nHTTP/1.0 401 Status Unauthorized\nThe request is not authorized because no credentials have been provided.\n\n$ curl -X GET -H \'Authorization: Bearer invalid-token\' http://my-app/some-route\n\nHTTP/1.0 401 Status Unauthorized\nThe request is not authorized because the provided credentials are invalid.\n\n$ curl -X GET -H \'Authorization: Bearer valid.access.token.from.peter\' http://my-app/some-route\n\nHTTP/1.0 200 OK\nThe request has been allowed! The subject is: "peter"\n')),(0,o.kt)("p",null,"In the background, this handler will make a request to the OAuth 2.0 Token\nEndpoint (configuration value\n",(0,o.kt)("inlineCode",{parentName:"p"},"authenticators.oauth2_introspection.introspection_url"),") to check if the Bearer\nToken is valid:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"POST /oauth2/introspect HTTP/1.1\n\ntoken=valid.access.token.from.peter\n")),(0,o.kt)("p",null,"If pre-authorization is enabled, that request will include an Authorization\nHeader:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"POST /oauth2/introspect HTTP/1.1\nAuthorization: Bearer token-received-by-performing-pre-authorization\n\ntoken=valid.access.token.from.peter\n")),(0,o.kt)("p",null,"The Token is considered valid if the Introspection response is HTTP 200 OK and\nincludes ",(0,o.kt)("inlineCode",{parentName:"p"},'{"active":true}')," in the response payload. The subject is extracted\nfrom the ",(0,o.kt)("inlineCode",{parentName:"p"},"username")," field."),(0,o.kt)("h2",{id:"jwt"},(0,o.kt)("inlineCode",{parentName:"h2"},"jwt")),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"jwt")," authenticator handles requests that have an Bearer Token in the\nAuthorization Header (",(0,o.kt)("inlineCode",{parentName:"p"},"Authorization: bearer <token>"),") or in a different header\nor query parameter specified in configuration. It assumes that the token is a\nJSON Web Token and tries to verify the signature of it."),(0,o.kt)("h3",{id:"configuration-6"},"Configuration"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"jwks_urls")," ([]string, required) - The URLs where ORY Oathkeeper can retrieve\nJSON Web Keys from for validating the JSON Web Token. Usually something like\n",(0,o.kt)("inlineCode",{parentName:"li"},"https://my-keys.com/.well-known/jwks.json"),". The response of that endpoint\nmust return a JSON Web Key Set (JWKS)."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"scope_strategy"),' (string, optional) - Sets the strategy to be used to\nvalidate/match the scope. Supports "hierarchic", "exact", "wildcard", "none".\nDefaults to "none".'),(0,o.kt)("li",{parentName:"ul"},"If ",(0,o.kt)("inlineCode",{parentName:"li"},"trusted_issuers")," ([]string) is set, the JWT must contain a value for claim\n",(0,o.kt)("inlineCode",{parentName:"li"},"iss")," that matches ",(0,o.kt)("em",{parentName:"li"},"exactly")," (case-sensitive) one of the values of\n",(0,o.kt)("inlineCode",{parentName:"li"},"trusted_issuers"),". If no values are configured, the issuer will be ignored."),(0,o.kt)("li",{parentName:"ul"},"If ",(0,o.kt)("inlineCode",{parentName:"li"},"target_audience")," ([]string) is set, the JWT must contain all values\n(exact, case-sensitive) in the claim ",(0,o.kt)("inlineCode",{parentName:"li"},"aud"),". If no values are configured, the\naudience will be ignored."),(0,o.kt)("li",{parentName:"ul"},"Value ",(0,o.kt)("inlineCode",{parentName:"li"},"allowed_algorithms")," ([]string) sets what signing algorithms are\nallowed. Defaults to ",(0,o.kt)("inlineCode",{parentName:"li"},"RS256"),"."),(0,o.kt)("li",{parentName:"ul"},"Value ",(0,o.kt)("inlineCode",{parentName:"li"},"required_scope")," ([]string) validates the scope of the JWT. It will\nchecks for claims ",(0,o.kt)("inlineCode",{parentName:"li"},"scp"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"scope"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"scopes")," in the JWT when validating the\nscope as that claim is not standardized."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"token_from")," (object, optional) - The location of the bearer token. If not\nconfigured, the token will be received from a default location -\n'Authorization' header. One and only one location (header, query, or cookie)\nmust be specified.",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"header")," (string, required, one of) - The header (case insensitive) that\nmust contain a Bearer token for request authentication. It can't be set\nalong with ",(0,o.kt)("inlineCode",{parentName:"li"},"query_parameter")," or ",(0,o.kt)("inlineCode",{parentName:"li"},"cookie"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"query_parameter")," (string, required, one of) - The query parameter (case\nsensitive) that must contain a Bearer token for request authentication. It\ncan't be set along with ",(0,o.kt)("inlineCode",{parentName:"li"},"header")," or ",(0,o.kt)("inlineCode",{parentName:"li"},"cookie"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"cookie")," (string, required, one of) - The cookie (case sensitive) that must\ncontain a Bearer token for request authentication. It can't be set along\nwith ",(0,o.kt)("inlineCode",{parentName:"li"},"header")," or ",(0,o.kt)("inlineCode",{parentName:"li"},"query_parameter"))))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"# Global configuration file oathkeeper.yml\nauthenticators:\n  jwt:\n    # Set enabled to true if the authenticator should be enabled and false to disable the authenticator. Defaults to false.\n    enabled: true\n\n    config:\n      jwks_urls:\n        - https://my-website.com/.well-known/jwks.json\n        - https://my-other-website.com/.well-known/jwks.json\n        - file://path/to/local/jwks.json\n      scope_strategy: none\n      required_scope:\n        - scope-a\n        - scope-b\n      target_audience:\n        - https://my-service.com/api/users\n        - https://my-service.com/api/devices\n      trusted_issuers:\n        - https://my-issuer.com/\n      allowed_algorithms:\n        - RS256\n      token_from:\n        header: Custom-Authorization-Header\n        # or\n        # query_parameter: auth-token\n        # or\n        # cookie: auth-token\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"# Some Access Rule: access-rule-1.yaml\nid: access-rule-1\n# match: ...\n# upstream: ...\nauthenticators:\n  - handler: jwt\n    config:\n      jwks_urls:\n        - https://my-website.com/.well-known/jwks.json\n        - https://my-other-website.com/.well-known/jwks.json\n        - file://path/to/local/jwks.json\n      scope_strategy: none\n      required_scope:\n        - scope-a\n        - scope-b\n      target_audience:\n        - https://my-service.com/api/users\n        - https://my-service.com/api/devices\n      trusted_issuers:\n        - https://my-issuer.com/\n      allowed_algorithms:\n        - RS256\n      token_from:\n        query_parameter: auth-token\n        # or\n        # header: Custom-Authorization-Header\n        # or\n        # cookie: auth-token\n")),(0,o.kt)("h4",{id:"validation-example"},"Validation example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "handler": "jwt",\n  "config": {\n    "required_scope": ["scope-a", "scope-b"],\n    "target_audience": [\n      "https://my-service.com/api/users",\n      "https://my-service.com/api/devices"\n    ],\n    "trusted_issuers": ["https://my-issuer.com/"],\n    "allowed_algorithms": ["RS256", "RS256"]\n  }\n}\n')),(0,o.kt)("p",null,"That exemplary Access Rule consider the following (decoded) JSON Web Token as\nvalid:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'{\n  "alg": "RS256"\n}\n{\n  "iss": "https://my-issuer.com/",\n  "aud": ["https://my-service.com/api/users", "https://my-service.com/api/devices"],\n  "scp": ["scope-a", "scope-b"]\n}\n')),(0,o.kt)("p",null,"And this token as invalid (audience is missing, issuer is not matching, scope is\nmissing, wrong algorithm):"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'{\n  "alg": "HS256"\n}\n{\n  "iss": "https://not-my-issuer.com/",\n  "aud": ["https://my-service.com/api/users"],\n  "scp": ["not-scope-a", "scope-b"]\n}\n')),(0,o.kt)("h3",{id:"scope"},"Scope"),(0,o.kt)("p",null,"JSON Web Tokens can be scoped. However, that feature is not standardized and\nseveral claims that represent the token scope have been seen in the wild: ",(0,o.kt)("inlineCode",{parentName:"p"},"scp"),",\n",(0,o.kt)("inlineCode",{parentName:"p"},"scope"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"scopes"),". Additionally, the claim value can be a string (",(0,o.kt)("inlineCode",{parentName:"p"},'"scope-a"'),"),\na space-delimited string (",(0,o.kt)("inlineCode",{parentName:"p"},'"scope-a scope-b"'),") or a JSON string array\n(",(0,o.kt)("inlineCode",{parentName:"p"},'["scope-a", "scope-b"]'),"). Because of this ambiguity, all of those claims are\nchecked and parsed and will be available as ",(0,o.kt)("inlineCode",{parentName:"p"},"scp")," (string array) in the\nauthentication session (",(0,o.kt)("inlineCode",{parentName:"p"},'.Extra["scp"]'),")."),(0,o.kt)("h3",{id:"access-rule-example-6"},"Access Rule Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},'$ cat ./rules.json\n\n[{\n  "id": "some-id",\n  "upstream": {\n    "url": "http://my-backend-service"\n  },\n  "match": {\n    "url": "http://my-app/some-route",\n    "methods": [\n      "GET"\n    ]\n  },\n  "authenticators": [{\n    "handler": "jwt",\n    "config": {\n      "required_scope": ["scope-a", "scope-b"],\n      "target_audience": ["aud-1"],\n      "trusted_issuers": ["iss-1"]\n    }\n  }],\n  "authorizer": { "handler": "allow" },\n  "mutators": [{ "handler": "noop" }]\n}]\n\n$ curl -X GET http://my-app/some-route\n\nHTTP/1.0 401 Status Unauthorized\nThe request is not authorized because no credentials have been provided.\n\n$ curl -X GET -H \'Authorization: Bearer invalid-token\' http://my-app/some-route\n\nHTTP/1.0 401 Status Unauthorized\nThe request is not authorized because the provided credentials are invalid.\n\n$ curl -X GET -H \'Authorization: Bearer valid.jwtfrom.peter\' http://my-app/some-route\n\nHTTP/1.0 200 OK\nThe request has been allowed! The subject is: "peter"\n')),(0,o.kt)("p",null,"In the background, this handler will fetch all JSON Web Key Sets provided by\nconfiguration key ",(0,o.kt)("inlineCode",{parentName:"p"},"authenticators.jwt.jwks_urls")," and use those keys to verify\nthe signature. If the signature can not be verified by any of those keys, the\nJWT is considered invalid."))}d.isMDXComponent=!0}}]);