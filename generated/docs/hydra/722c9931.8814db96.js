(window.webpackJsonp=window.webpackJsonp||[]).push([[173],{231:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return c})),t.d(n,"metadata",(function(){return l})),t.d(n,"rightToc",(function(){return d})),t.d(n,"default",(function(){return b}));var a=t(2),o=t(6),r=(t(0),t(470)),s=t(474),i=t(475),c={id:"consent",title:"Implementing the Consent Endpoint & UI",sidebar_label:"Consent Endpoint"},l={unversionedId:"guides/consent",id:"version-v1.9/guides/consent",isDocsHomePage:!1,title:"Implementing the Consent Endpoint & UI",description:"Please read the Consent Flow Documentation first!",source:"@site/versioned_docs/version-v1.9/guides/consent.mdx",slug:"/guides/consent",permalink:"/hydra/docs/guides/consent",editUrl:"https://github.com/ory/hydra/edit/master/docs/versioned_docs/version-v1.9/guides/consent.mdx",version:"v1.9",lastUpdatedBy:"aeneasr",lastUpdatedAt:1603200622,sidebar_label:"Consent Endpoint",sidebar:"version-v1.9/docs",previous:{title:"Implementing the Login Endpoint",permalink:"/hydra/docs/guides/login"},next:{title:"Implementing the Logout Endpoint & UI",permalink:"/hydra/docs/guides/logout"}},d=[{value:"Implementing the Consent HTML Form",id:"implementing-the-consent-html-form",children:[]},{value:"Accepting the Consent Request",id:"accepting-the-consent-request",children:[]},{value:"Rejecting the Consent Request",id:"rejecting-the-consent-request",children:[]},{value:"Complete Endpoint",id:"complete-endpoint",children:[]}],h={rightToc:d};function b(e){var n=e.components,c=Object(o.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},h,c,{components:n,mdxType:"MDXLayout"}),Object(r.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"Please read the ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"/hydra/docs/concepts/consent"}),"Consent Flow Documentation")," first!"))),Object(r.b)("p",null,"In this document, you will learn how to implement the Consent Endpoint using our\nORY Hydra SDKs. The goal for this document is to have document this for multiple\nprogramming languages. If you are an expert in one of these languages, your help\nis highly appreciated in improving these docs!"),Object(r.b)("h2",{id:"implementing-the-consent-html-form"},"Implementing the Consent HTML Form"),Object(r.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"The Consent HTML Form cannot be a Single Page App (Client-side browser\napplication) or a Mobile App! It has to be a server-side application with access\nto ORY Hydra's Admin Endpoint!"))),Object(r.b)(s.a,{defaultValue:"ui",values:[{label:"UI",value:"ui"},{label:"NodeJS",value:"node"},{label:"HTML Example",value:"html"}],mdxType:"Tabs"},Object(r.b)(i.a,{value:"ui",mdxType:"TabItem"},Object(r.b)("p",null,Object(r.b)("img",{alt:"OAuth2 Consent UI Screen",src:t(624).default}))),Object(r.b)(i.a,{value:"node",mdxType:"TabItem"},Object(r.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"Check out our\n",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/ory/hydra-login-consent-node"}),"reference implementation")," of\nthis endpoint!"))),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-typescript",metastring:'title="routes/consent.ts"',title:'"routes/consent.ts"'}),"// This example uses ExpressJS\nimport express from 'express'\nimport url from 'url'\nimport csrf from 'csurf'\nimport { AdminApi } from '@oryd/hydra-client'\n\nconst hydraAdmin = new AdminApi(process.env.HYDRA_ADMIN_URL)\n\n// Sets up csrf protection. Always do this when handling HTML forms!\nconst csrfProtection = csrf({ cookie: true })\nconst router = express.Router()\n\nrouter.get('/get', csrfProtection, (req, res, next) => {\n  // Parses the URL query\n  const query = url.parse(req.url, true).query\n\n  // The challenge is used to fetch information about the consent request from ORY hydraAdmin.\n  const challenge = String(query.consent_challenge)\n\n  hydraAdmin\n    .getConsentRequest(challenge)\n    // This will be called if the HTTP request was successful\n    .then(({ body }) => {\n      // If a user has granted this application the requested scope, hydra will tell us to not show the UI.\n      if (body.skip) {\n        // You can apply logic here, for example grant another scope, or do whatever...\n        // ...\n\n        // Now it's time to grant the consent request. You could also deny the request if something went terribly wrong\n        return hydraAdmin\n          .acceptConsentRequest(challenge, {\n            // We can grant all scopes that have been requested - hydra already checked for us that no additional scopes\n            // are requested accidentally.\n            grantScope: body.requestedScope,\n\n            // ORY Hydra checks if requested audiences are allowed by the client, so we can simply echo this.\n            grantAccessTokenAudience: body.requestedAccessTokenAudience,\n\n            // The session allows us to set session data for id and access tokens\n            session: {\n              // This data will be available when introspecting the token. Try to avoid sensitive information here,\n              // unless you limit who can introspect tokens.\n              // accessToken: { foo: 'bar' },\n              // This data will be available in the ID token.\n              // idToken: { baz: 'bar' },\n            }\n          })\n          .then(({ body }) => {\n            // All we need to do now is to redirect the user back to hydra!\n            res.redirect(String(body.redirectTo))\n          })\n      }\n\n      // If consent can't be skipped we MUST show the consent UI.\n      res.render('consent', {\n        csrfToken: req.csrfToken(),\n        challenge: challenge,\n        // We have a bunch of data available from the response, check out the API docs to find what these values mean\n        // and what additional data you have available.\n        requested_scope: body.requestedScope,\n        user: body.subject,\n        client: body.client\n      })\n    })\n    // This will handle any error that happens when making HTTP calls to hydra\n    .catch(next)\n})\n"))),Object(r.b)(i.a,{value:"html",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-html"}),'<form action="/consent" method="POST">\n  <input type="hidden" name="challenge" value="#{ challenge }" />\n  <input type="hidden" name="_csrf" value="#{ csrfToken }" />\n  <p>\n    Hi #{ user }, application <strong>#{ client.client_name }</strong> wants\n    access resources on your behalf and to:\n  </p>\n\n  \x3c!--\n    In a real application, you would iterate over all the scopes the OAuth2 Client has requested here.\n\n    For the sake of simplicity, we\'ll just show the two scopes `openid` and `offline` here:\n    --\x3e\n  <input type="checkbox" id="openid" value="openid" name="grant_scope" />\n  <label for="openid">openid</label><br />\n\n  <input type="checkbox" id="offline" value="offline" name="grant_scope" />\n  <label for="offline">offline</label><br />\n\n  <p>\n    Do you want to be asked next time when this application wants to access your\n    data? The application will not be able to ask for more permissions without\n    your consent.\n  </p>\n\n  <input type="checkbox" id="remember" name="remember" value="1" />\n  <label for="remember">Do not ask me again</label><br />\n\n  <input type="submit" id="accept" name="submit" value="Allow access" />\n  <input type="submit" id="reject" name="submit" value="Deny access" />\n</form>\n')))),Object(r.b)("h2",{id:"accepting-the-consent-request"},"Accepting the Consent Request"),Object(r.b)(s.a,{defaultValue:"node",values:[{label:"NodeJS",value:"node"}],mdxType:"Tabs"},Object(r.b)(i.a,{value:"node",mdxType:"TabItem"},Object(r.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"Check out our\n",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/ory/hydra-login-consent-node"}),"reference implementation")," of\nthis endpoint!"))),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-typescript"}),"hydraAdmin\n  .acceptConsentRequest(challenge, {\n    // We can grant all scopes that have been requested - hydra already checked for us that no additional scopes\n    // are requested accidentally.\n    grantScope: ['email', 'openid'],\n\n    // The session allows us to set session data for id and access tokens\n    session: {\n      // This data will be available when introspecting the token. Try to avoid sensitive information here,\n      // unless you limit who can introspect tokens.\n      access_token: {\n        // foo: 'bar'\n      },\n\n      // This data will be available in the ID token.\n      id_token: {\n        // baz: 'bar'\n      }\n    },\n\n    // This tells hydra to remember this consent request and allow the same client to request the same\n    // scopes from the same user, without showing the UI, in the future.\n    remember: true,\n\n    // When this \"remember\" sesion expires, in seconds. Set this to 0 so it will never expire.\n    rememberFor: 3600\n  })\n  .then(({ body }) => {\n    // All we need to do now is to redirect the user back to hydra!\n    res.redirect(String(body.redirectTo))\n  })\n// This will handle any error that happens when making HTTP calls to hydra\n// .catch(next);\n")))),Object(r.b)("h2",{id:"rejecting-the-consent-request"},"Rejecting the Consent Request"),Object(r.b)(s.a,{defaultValue:"node",values:[{label:"NodeJS",value:"node"}],mdxType:"Tabs"},Object(r.b)(i.a,{value:"node",mdxType:"TabItem"},Object(r.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"Check out our\n",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/ory/hydra-login-consent-node"}),"reference implementation")," of\nthis endpoint!"))),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-typescript"}),"hydraAdmin\n  .rejectConsentRequest(challenge, {\n    error: 'access_denied',\n    errorDescription: 'The resource owner denied the request'\n  })\n  .then(({ body }) => {\n    // All we need to do now is to redirect the browser back to hydra!\n    res.redirect(String(body.redirectTo))\n  })\n// This will handle any error that happens when making HTTP calls to hydra\n// .catch(next);\n")))),Object(r.b)("h2",{id:"complete-endpoint"},"Complete Endpoint"),Object(r.b)(s.a,{defaultValue:"node",values:[{label:"NodeJS",value:"node"}],mdxType:"Tabs"},Object(r.b)(i.a,{value:"node",mdxType:"TabItem"},Object(r.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"Check out our\n",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/ory/hydra-login-consent-node"}),"reference implementation")," of\nthis endpoint!"))),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-typescript",metastring:'title="routes/consent.ts"',title:'"routes/consent.ts"'}),"// This is the endpoint the user ends up at once she/he inserts their password and username and hits \"Log in\".\nrouter.post('/consent', csrfProtection, (req, res, next) => {\n  // The challenge is now a hidden input field, so let's take it from the request body instead\n  const challenge = req.body.challenge;\n\n  // Let's see if the user decided to accept or reject the consent request..\n  if (req.body.submit !== 'Allow access') {\n    // Looks like the consent request was denied by the user\n    return hydraAdmin.rejectConsentRequest(challenge, {\n      error: 'access_denied',\n      errorDescription: 'The resource owner denied the request'\n    }).then(({body}) => {\n        // All we need to do now is to redirect the browser back to hydra!\n        res.redirect(String(body.redirectTo));\n      })\n      // This will handle any error that happens when making HTTP calls to hydra\n      .catch(next);\n  }\n\n  // Helps with form arrays\n  let grantScope = req.body.grant_scope\n  if (!Array.isArray(grantScope)) {\n    grantScope = [grantScope]\n  }\n\n  // The session allows us to set session data for id and access tokens\n  let session = {\n    // This data will be available when introspecting the token. Try to avoid sensitive information here,\n    // unless you limit who can introspect tokens.\n    accessToken: {\n      foo: 'bar'\n    },\n\n    // This data will be available in the ID token.\n    idToken: {\n      // baz: 'bar'\n    },\n  }\n\n  // Here is also the place to add data to the ID or access token. For example,\n  // if the scope 'profile' is added, add the family and given name to the ID Token claims:\n  if (grantScope.indexOf('profile')) {\n    session.idToken.family_name = 'Doe'\n    session.idToken.given_name = 'John'\n  }\n\n  // Let's fetch the consent request again to be able to set `grantAccessTokenAudience` properly.\n  hydraAdmin.getConsentRequest(challenge)\n    // This will be called if the HTTP request was successful\n    .then(({body}) => {\n      return hydraAdmin.acceptConsentRequest(challenge, {\n        // We can grant all scopes that have been requested - hydra already checked for us that no additional scopes\n        // are requested accidentally.\n        grantScope: grantScope,\n\n        // The session allows us to set session data for id and access tokens\n        session: session,\n\n        // ORY Hydra checks if requested audiences are allowed by the client, so we can simply echo this.\n        grantAccessTokenAudience: body.`requestedAccessTokenAudience`,\n\n        // This tells hydra to remember this consent request and allow the same client to request the same\n        // scopes from the same user, without showing the UI, in the future.\n        remember: Boolean(req.body.remember),\n\n        // When this \"remember\" sesion expires, in seconds. Set this to 0 so it will never expire.\n        rememberFor: 3600,\n      }).then(({body}) => {\n        // All we need to do now is to redirect the user back to hydra!\n        res.redirect(String(body.redirectTo));\n      })\n    })\n    // This will handle any error that happens when making HTTP calls to hydra\n    .catch(next);\n});\n")))))}b.isMDXComponent=!0},470:function(e,n,t){"use strict";t.d(n,"a",(function(){return h})),t.d(n,"b",(function(){return p}));var a=t(0),o=t.n(a);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=o.a.createContext({}),d=function(e){var n=o.a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},h=function(e){var n=d(e.components);return o.a.createElement(l.Provider,{value:n},e.children)},b={inlineCode:"code",wrapper:function(e){var n=e.children;return o.a.createElement(o.a.Fragment,{},n)}},u=o.a.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),h=d(t),u=a,p=h["".concat(s,".").concat(u)]||h[u]||b[u]||r;return t?o.a.createElement(p,i(i({ref:n},l),{},{components:t})):o.a.createElement(p,i({ref:n},l))}));function p(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,s=new Array(r);s[0]=u;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var l=2;l<r;l++)s[l]=t[l];return o.a.createElement.apply(null,s)}return o.a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},474:function(e,n,t){"use strict";var a=t(0),o=t.n(a),r=t(482),s=t(480),i=t(49),c=t.n(i),l=37,d=39;n.a=function(e){var n=e.block,t=e.children,i=e.defaultValue,h=e.values,b=e.groupId,u=Object(r.a)(),p=u.tabGroupChoices,m=u.setTabGroupChoices,f=Object(a.useState)(i),v=f[0],g=f[1],y=Object(a.useState)(!1),O=y[0],j=y[1];if(null!=b){var w=p[b];null!=w&&w!==v&&h.some((function(e){return e.value===w}))&&g(w)}var T=function(e){g(e),null!=b&&m(b,e)},N=[],k=function(e){e.metaKey||e.altKey||e.ctrlKey||j(!0)},x=function(){j(!1)};return Object(a.useEffect)((function(){window.addEventListener("keydown",k),window.addEventListener("mousedown",x)}),[]),o.a.createElement("div",null,o.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(s.a)("tabs",{"tabs--block":n})},h.map((function(e){var n=e.value,t=e.label;return o.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":v===n,className:Object(s.a)("tabs__item",c.a.tabItem,{"tabs__item--active":v===n}),style:O?{}:{outline:"none"},key:n,ref:function(e){return N.push(e)},onKeyDown:function(e){!function(e,n,t){switch(t.keyCode){case d:!function(e,n){var t=e.indexOf(n)+1;e[t]?e[t].focus():e[0].focus()}(e,n);break;case l:!function(e,n){var t=e.indexOf(n)-1;e[t]?e[t].focus():e[e.length-1].focus()}(e,n)}}(N,e.target,e),k(e)},onFocus:function(){return T(n)},onClick:function(){T(n),j(!1)},onPointerDown:function(){return j(!1)}},t)}))),o.a.createElement("div",{role:"tabpanel",className:"margin-vert--md"},a.Children.toArray(t).filter((function(e){return e.props.value===v}))[0]))}},475:function(e,n,t){"use strict";var a=t(0),o=t.n(a);n.a=function(e){return o.a.createElement("div",null,e.children)}},480:function(e,n,t){"use strict";function a(e){var n,t,o="";if("string"==typeof e||"number"==typeof e)o+=e;else if("object"==typeof e)if(Array.isArray(e))for(n=0;n<e.length;n++)e[n]&&(t=a(e[n]))&&(o&&(o+=" "),o+=t);else for(n in e)e[n]&&(o&&(o+=" "),o+=n);return o}n.a=function(){for(var e,n,t=0,o="";t<arguments.length;)(e=arguments[t++])&&(n=a(e))&&(o&&(o+=" "),o+=n);return o}},481:function(e,n,t){"use strict";var a=t(0),o=Object(a.createContext)(void 0);n.a=o},482:function(e,n,t){"use strict";var a=t(0),o=t(481);n.a=function(){var e=Object(a.useContext)(o.a);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},624:function(e,n,t){"use strict";t.r(n),n.default=t.p+"assets/images/consent-endpoint-31856a0555a6a8438d4603692bdab5d2.png"}}]);