(self.webpackChunkdocusaurus_template=self.webpackChunkdocusaurus_template||[]).push([[41366],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return c},kt:function(){return h}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=u(n),h=a,g=d["".concat(l,".").concat(h)]||d[h]||p[h]||i;return n?r.createElement(g,o(o({ref:t},c),{},{components:n})):r.createElement(g,o({ref:t},c))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var u=2;u<i;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},13919:function(e,t,n){"use strict";function r(e){return!0===/^(\w*:|\/\/)/.test(e)}function a(e){return void 0!==e&&!r(e)}n.d(t,{b:function(){return r},Z:function(){return a}})},44996:function(e,t,n){"use strict";n.d(t,{C:function(){return i},Z:function(){return o}});var r=n(52263),a=n(13919);function i(){var e=(0,r.Z)().siteConfig,t=(e=void 0===e?{}:e).baseUrl,n=void 0===t?"/":t,i=e.url;return{withBaseUrl:function(e,t){return function(e,t,n,r){var i=void 0===r?{}:r,o=i.forcePrependBaseUrl,s=void 0!==o&&o,l=i.absolute,u=void 0!==l&&l;if(!n)return n;if(n.startsWith("#"))return n;if((0,a.b)(n))return n;if(s)return t+n;var c=n.startsWith(t)?n:t+n.replace(/^\//,"");return u?e+c:c}(i,n,e,t)}}}function o(e,t){return void 0===t&&(t={}),(0,i().withBaseUrl)(e,t)}},52748:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return u},metadata:function(){return c},toc:function(){return p},default:function(){return h}});var r=n(22122),a=n(19756),i=(n(67294),n(3905)),o=n(44996),s=["components"],l={id:"tracing",title:"Distributed Tracing with Jaeger"},u=void 0,c={unversionedId:"guides/tracing",id:"version-v1.6/guides/tracing",isDocsHomePage:!1,title:"Distributed Tracing with Jaeger",description:"Configuring Distributed Tracing (DT) will enable you to obtain a visualization",source:"@site/versioned_docs/version-v1.6/guides/tracing.mdx",sourceDirName:"guides",slug:"/guides/tracing",permalink:"/hydra/docs/v1.6/guides/tracing",editUrl:"https://github.com/ory/hydra/edit/master/docs/versioned_docs/version-v1.6/guides/tracing.mdx",version:"v1.6",lastUpdatedBy:"aeneasr",lastUpdatedAt:1595248858,formattedLastUpdatedAt:"7/20/2020",frontMatter:{id:"tracing",title:"Distributed Tracing with Jaeger"},sidebar:"version-v1.6/docs",previous:{title:"Preparing for Production",permalink:"/hydra/docs/v1.6/production"},next:{title:"Secrets and Key Rotation",permalink:"/hydra/docs/v1.6/guides/secrets-key-rotation"}},p=[{value:"What a Hydra trace includes",id:"what-a-hydra-trace-includes",children:[]},{value:"Alright, how can I set this up locally?",id:"alright-how-can-i-set-this-up-locally",children:[]},{value:"Tracing configurations",id:"tracing-configurations",children:[]}],d={toc:p};function h(e){var t=e.components,n=(0,a.Z)(e,s);return(0,i.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Configuring Distributed Tracing (DT) will enable you to obtain a visualization\nof the call paths that take place in order to process a request made to Hydra.\nIt's yet another tool that you can use to aid you in profiling, debugging and\nultimately understanding your deployment of Hydra better. Hydra currently\nsupports the following tracing options:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Tracing backend(s): Jaeger - ",(0,i.kt)("em",{parentName:"li"},"Note: adding support for other\n",(0,i.kt)("a",{parentName:"em",href:"https://opentracing.io/docs/supported-tracers"},"opentracing compliant backends"),"\nis planned. To aid in priority, please\n",(0,i.kt)("a",{parentName:"em",href:"https://github.com/ory/hydra/issues"},"create an issue")," with your feature\nrequest.")),(0,i.kt)("li",{parentName:"ul"},"Following existing traces: If you have deployed Hydra behind a proxy that has\ninitiated a trace, Hydra will attempt to join that trace by examining the\nrequest headers for tracing context.")),(0,i.kt)("h3",{id:"what-a-hydra-trace-includes"},"What a Hydra trace includes"),(0,i.kt)("p",null,"In DT speak, a trace is comprised of one or more spans which are logical units\nof work. Each Hydra span is encapsulated with the following state:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"A name"),(0,i.kt)("li",{parentName:"ul"},"A start time"),(0,i.kt)("li",{parentName:"ul"},"A finish time"),(0,i.kt)("li",{parentName:"ul"},"A set of zero or more tags")),(0,i.kt)("p",null,"Hydra currently creates the following spans:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Top level span (",(0,i.kt)("em",{parentName:"li"},"named after the request path"),") for the requested endpoint.\nSpan tags: - http method - http status code - error IFF status code >= 400"),(0,i.kt)("li",{parentName:"ul"},"Child span will be created if bcrypt (",(0,i.kt)("em",{parentName:"li"},"e.g. when the token endpoint is\ncalled"),") is called. Span tags: - bcrypt work factor"),(0,i.kt)("li",{parentName:"ul"},"All SQL database interactions. Spans/tags will vary depending on the database\ndriver used.")),(0,i.kt)("p",null,"This is still evolving and subject to change as tracing support continues to\nexpand in Hydra. If you see something that is missing/wrong, please create an\nissue."),(0,i.kt)("h3",{id:"alright-how-can-i-set-this-up-locally"},"Alright, how can I set this up locally?"),(0,i.kt)("p",null,"The\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/ory/hydra/blob/master/quickstart-tracing.yml"},"provided docker-compose file"),"\nin the project repository has tracing configuration w/ jaeger added which you\ncan use to play around with. Simply uncomment the configurations associated with\ntracing as so:"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Under the Hydra service definition ",(0,i.kt)("inlineCode",{parentName:"strong"},"depends_on")," configs, uncomment the\nfollowing:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"- jaeger\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Under the Hydra service definition ",(0,i.kt)("inlineCode",{parentName:"strong"},"environment")," configs, uncomment the\nfollowing:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"- TRACING_PROVIDER\n- TRACING_PROVIDER_JAEGER_SAMPLING_SERVER_URL\n- TRACING_PROVIDER_JAEGER_LOCAL_AGENT_ADDRESS\n- TRACING_PROVIDER_JAEGER_SAMPLING_TYPE\n- TRACING_PROVIDER_JAEGER_SAMPLING_VALUE\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Uncomment the Jaeger service definition:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'jaeger:\n  image: jaegertracing/all-in-one:1.7.0\n  ports:\n  - "5775:5775/udp"\n  - "6831:6831/udp"\n  - "6832:6832/udp"\n  - "5778:5778"\n  - "16686:16686"\n  - "14268:14268"\n  - "9411:9411"\n')),(0,i.kt)("p",null,"Then simply run ",(0,i.kt)("inlineCode",{parentName:"p"},"docker-compose up"),". Grab a coffee or stretch while you wait for\neverything to come up. You will then be able to navigate to the Jaeger UI which\nyou have exposed on port ",(0,i.kt)("inlineCode",{parentName:"p"},"16686")," at http://localhost:16686/search. You can now\nstart making requests to Hydra and inspect traces!"),(0,i.kt)("p",null,"As an example, here is a trace created by making a bad request to the\n",(0,i.kt)("inlineCode",{parentName:"p"},"POST /clients")," endpoint:"),(0,i.kt)("img",{alt:"Sample Trace",src:(0,o.Z)("/images/docs/hydra/sample_trace.png")}),";",(0,i.kt)("p",null,"At a glance, you are able to see that:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"The request failed"),(0,i.kt)("li",{parentName:"ul"},"The request took ~80ms"),(0,i.kt)("li",{parentName:"ul"},"It resulted in a 409"),(0,i.kt)("li",{parentName:"ul"},"The hash comparison to validate the client's credentials took a whopping 70ms.\nBcrypt is expensive!"),(0,i.kt)("li",{parentName:"ul"},"The various database operations performed")),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"Note: in order to see spans around database interactions, you must be using a\nSQL backend (i.e. MySQL or Postgres).")),(0,i.kt)("h3",{id:"tracing-configurations"},"Tracing configurations"),(0,i.kt)("p",null,"The CLI will provide you with the list of Hydra tracing configurations and their\nsupported values. Simply run:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"docker exec -it hydra_hydra_1 hydra serve --help\n")),(0,i.kt)("p",null,"And read the section on ",(0,i.kt)("inlineCode",{parentName:"p"},"DEBUG CONTROLS"),"."))}h.isMDXComponent=!0}}]);