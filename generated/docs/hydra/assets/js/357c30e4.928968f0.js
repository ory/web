(self.webpackChunkdocusaurus_template=self.webpackChunkdocusaurus_template||[]).push([[52131],{13919:function(e,t,n){"use strict";function o(e){return!0===/^(\w*:|\/\/)/.test(e)}function a(e){return void 0!==e&&!o(e)}n.d(t,{b:function(){return o},Z:function(){return a}})},44996:function(e,t,n){"use strict";n.d(t,{C:function(){return i},Z:function(){return l}});var o=n(52263),a=n(13919);function i(){var e=(0,o.Z)().siteConfig,t=(e=void 0===e?{}:e).baseUrl,n=void 0===t?"/":t,i=e.url;return{withBaseUrl:function(e,t){return function(e,t,n,o){var i=void 0===o?{}:o,l=i.forcePrependBaseUrl,r=void 0!==l&&l,s=i.absolute,d=void 0!==s&&s;if(!n)return n;if(n.startsWith("#"))return n;if((0,a.b)(n))return n;if(r)return t+n;var u=n.startsWith(t)?n:t+n.replace(/^\//,"");return d?e+u:u}(i,n,e,t)}}}function l(e,t){return void 0===t&&(t={}),(0,i().withBaseUrl)(e,t)}},32527:function(e,t,n){"use strict";n.d(t,{Z:function(){return h}});var o=n(67294),a=n(21140),i=n.n(a),l="graph_1lrJ",r="pointer_3d8u",s="overlay_2fuY",d="visible_2Z3U",u="backdrop_2z5L",c=n(94184),p=n.n(c);i().initialize({startOnLoad:!0,logLevel:"fatal",securityLevel:"strict",arrowMarkerAbsolute:!1,theme:"neutral",flowchart:{useMaxWidth:!0,htmlLabels:!0,rankSpacing:65,nodeSpacing:30,curve:"basis"},sequence:{useMaxWidth:!0},gantt:{useMaxWidth:!0}});var h=function(e){var t,n=e.chart,a=(0,o.useState)(!1),c=a[0],h=a[1],m=(0,o.useState)(void 0),g=m[0],k=m[1],b=(0,o.useState)("mermaid-"+Math.random().toString(36).substr(2,-1))[0],f=function(){return h(!c)};return(0,o.useEffect)((function(){i().render(b,n,(function(e){k(e)}))}),[]),o.createElement(o.Fragment,null,o.createElement("div",{onClick:f,className:p()(l,r),dangerouslySetInnerHTML:{__html:g}}),o.createElement("div",{onClick:f,className:p()(s,r,l,(t={},t[d]=c,t))},o.createElement("div",{onClick:function(e){return e.stopPropagation()},className:p()(u,l),dangerouslySetInnerHTML:{__html:g}})))}},38592:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return r},contentTitle:function(){return s},metadata:function(){return d},toc:function(){return u},default:function(){return p}});var o=n(22122),a=n(19756),i=(n(67294),n(3905)),l=(n(44996),n(32527),n(55064),n(58215),["components"]),r={id:"logout",title:"Logout Flow"},s=void 0,d={unversionedId:"concepts/logout",id:"version-v1.6/concepts/logout",isDocsHomePage:!1,title:"Logout Flow",description:"ORY Hydra supports",source:"@site/versioned_docs/version-v1.6/concepts/logout.mdx",sourceDirName:"concepts",slug:"/concepts/logout",permalink:"/hydra/docs/v1.6/concepts/logout",editUrl:"https://github.com/ory/hydra/edit/master/docs/versioned_docs/version-v1.6/concepts/logout.mdx",version:"v1.6",lastUpdatedBy:"aeneasr",lastUpdatedAt:1595248858,formattedLastUpdatedAt:"7/20/2020",frontMatter:{id:"logout",title:"Logout Flow"},sidebar:"version-v1.6/docs",previous:{title:"Consent Flow",permalink:"/hydra/docs/v1.6/concepts/consent"},next:{title:"JSON Web Key Sets",permalink:"/hydra/docs/v1.6/jwks"}},u=[{value:"Logout Flow",id:"logout-flow",children:[]},{value:"OpenID Connect Front-Channel Logout 1.0",id:"openid-connect-front-channel-logout-10",children:[]},{value:"OpenID Connect Back-Channel Logout 1.0",id:"openid-connect-back-channel-logout-10",children:[]}],c={toc:u};function p(e){var t=e.components,n=(0,a.Z)(e,l);return(0,i.kt)("wrapper",(0,o.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"ORY Hydra supports\n",(0,i.kt)("a",{parentName:"p",href:"https://openid.net/specs/openid-connect-frontchannel-1_0.html"},"OpenID Connect Front-Channel Logout 1.0"),"\nand\n",(0,i.kt)("a",{parentName:"p",href:"https://openid.net/specs/openid-connect-backchannel-1_0.html"},"OpenID Connect Back-Channel Logout 1.0"),"\nflows."),(0,i.kt)("p",null,"A logout request may be initiated by the OpenID Provider (OP - ",(0,i.kt)("strong",{parentName:"p"},"you"),") or by\nthe Relying Party (RP - the OAuth2 Client):"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"The OP-initiated flow does not need an ",(0,i.kt)("inlineCode",{parentName:"li"},"id_token_hint"),", and it may neither\ndefine a ",(0,i.kt)("inlineCode",{parentName:"li"},"state")," nor a ",(0,i.kt)("inlineCode",{parentName:"li"},"post_logout_redirect_uri"),"."),(0,i.kt)("li",{parentName:"ul"},"The RP-initiated flow needs an ",(0,i.kt)("inlineCode",{parentName:"li"},"id_token_hint")," and may optionally define\n",(0,i.kt)("inlineCode",{parentName:"li"},"state")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"post_logout_redirect_uri"),".")),(0,i.kt)("p",null,"Both requests follow the same pattern as user login and user consent. Before the\nlogout is completed, the user is redirected to the ",(0,i.kt)("strong",{parentName:"p"},"Logout UI")," (similar to\nLogin UI and Consent UI) to confirm the logout request."),(0,i.kt)("p",null,"There are several possible pathways for executing this flow, explained in the\nfollowing diagram:"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://mermaid-js.github.io/mermaid-live-editor/#/edit/eyJjb2RlIjoiZ3JhcGggVEQ7XG4gICAgSVtHRVQgL29hdXRoMi9zZXNzaW9uL2xvZ291dF0tLT58aGFzIGlkX3Rva2VuX2hpbnQqfFJQSVtSUC1pbml0aWF0ZWQgbG9nb3V0XTtcbiAgICBJW0dFVCAvb2F1dGgyL3Nlc3Npb24vbG9nb3V0XS0tPnxkb2VzIG5vdCBoYXZlIGlkX3Rva2VuX2hpbnQqfE9QSVtPUC1pbml0aWF0ZWQgbG9nb3V0XVxuT1BJLS0-fGhhcyBzdGF0ZSp8RVtFcnJvcl1cbk9QSS0tPnxoYXMgcG9zdF9sb2dvdXRfdXJpKnxFW0Vycm9yXVxuT1BJLS0-fGhhcyB2YWxpZCBzZXNzaW9uIGNvb2tpZXxMVUlbTG9nb3V0IFVJIHdpdGggP2xvZ291dF9jaGFsbGVuZ2U9Li4uXVxuT1BJLS0-fGhhcyBubyB2YWxpZCBzZXNpb24gY29va2llfEVuZFtSZXR1cm4gdG8gcG9zdF9sb2dvdXRfdXJsKioqXVxuUlBJLS0-fGhhcyBhY3RpdmUgc2Vzc2lvbioqKip8TFVJXG5SUEktLT58bm8gYWN0aXZlIHNlc3Npb24qKioqfFJQSTJcbkxVSS0tPnx2ZXJpZnkgbG9nb3V0IHJlcXVlc3R8TFVJXG5MVUktLT58cmVkaXJlY3Qgd2l0aCBsb2dvdXRfdmVyaWZpZXIqfFJQSTJbIC9vYXV0aDIvc2Vzc2lvbnMvbG9nb3V0P2xvZ291dF92ZXJpZmllcj0uLi5dXG5SUEkyLS0-fGV4ZWN1dGUgZnJvbnQvYmFja2NoYW5uZWwgbG9nb3V0LCByZXZva2UgY29va2llfFJQSTJcblJQSTItLT58UmVkaXJlY3QgdG98RW5kIiwibWVybWFpZCI6eyJ0aGVtZSI6ImRlZmF1bHQifX0"},(0,i.kt)("img",{parentName:"a",src:"https://mermaid.ink/img/eyJjb2RlIjoiZ3JhcGggVEQ7XG4gICAgSVtHRVQgL29hdXRoMi9zZXNzaW9uL2xvZ291dF0tLT58aGFzIGlkX3Rva2VuX2hpbnQqfFJQSVtSUC1pbml0aWF0ZWQgbG9nb3V0XTtcbiAgICBJW0dFVCAvb2F1dGgyL3Nlc3Npb24vbG9nb3V0XS0tPnxkb2VzIG5vdCBoYXZlIGlkX3Rva2VuX2hpbnQqfE9QSVtPUC1pbml0aWF0ZWQgbG9nb3V0XVxuT1BJLS0-fGhhcyBzdGF0ZSp8RVtFcnJvcl1cbk9QSS0tPnxoYXMgcG9zdF9sb2dvdXRfdXJpKnxFW0Vycm9yXVxuT1BJLS0-fGhhcyB2YWxpZCBzZXNzaW9uIGNvb2tpZXxMVUlbTG9nb3V0IFVJIHdpdGggP2xvZ291dF9jaGFsbGVuZ2U9Li4uXVxuT1BJLS0-fGhhcyBubyB2YWxpZCBzZXNpb24gY29va2llfEVuZFtSZXR1cm4gdG8gcG9zdF9sb2dvdXRfdXJsKioqXVxuUlBJLS0-fGhhcyBhY3RpdmUgc2Vzc2lvbioqKip8TFVJXG5SUEktLT58bm8gYWN0aXZlIHNlc3Npb24qKioqfFJQSTJcbkxVSS0tPnx2ZXJpZnkgbG9nb3V0IHJlcXVlc3R8TFVJXG5MVUktLT58cmVkaXJlY3Qgd2l0aCBsb2dvdXRfdmVyaWZpZXIqfFJQSTJbIC9vYXV0aDIvc2Vzc2lvbnMvbG9nb3V0P2xvZ291dF92ZXJpZmllcj0uLi5dXG5SUEkyLS0-fGV4ZWN1dGUgZnJvbnQvYmFja2NoYW5uZWwgbG9nb3V0LCByZXZva2UgY29va2llfFJQSTJcblJQSTItLT58UmVkaXJlY3QgdG98RW5kIiwibWVybWFpZCI6eyJ0aGVtZSI6ImRlZmF1bHQifX0",alt:"User Logout"}))),(0,i.kt)("p",null,"Legend:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"*"),": This is a query parameter, for example\n",(0,i.kt)("inlineCode",{parentName:"li"},"/oauth2/sessions/logout?id_token_hint=...")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"**"),' Here, an "active session" implies that there has been at least one login\nrequest completed with ',(0,i.kt)("inlineCode",{parentName:"li"},"remember: true")," for that user. If that's not the case,\nthe system \"does not know\" what to do (because there has never been a session\nissued that was remembered - hence it's not possible to forget it)."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"***"),': Here, the "valid session cookies" implies that the browser has a valid\nauthentication cookie when calling ',(0,i.kt)("inlineCode",{parentName:"li"},"/oauth2/sessions/logout"),". If you have\nproblems at this step, check if there is a cookie\n",(0,i.kt)("inlineCode",{parentName:"li"},"oauth2_authentication_session")," for the domain ORY Hydra is running at. ",(0,i.kt)("strong",{parentName:"li"},"Do\nnot mix up IP (e.g. ",(0,i.kt)("inlineCode",{parentName:"strong"},"127.0.0.1"),", ",(0,i.kt)("inlineCode",{parentName:"strong"},"192.168.1.1"),") addresses and FQDNs (e.g.\n",(0,i.kt)("inlineCode",{parentName:"strong"},"localhost"),", ",(0,i.kt)("inlineCode",{parentName:"strong"},"google.com"),").")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"****"),": The ",(0,i.kt)("inlineCode",{parentName:"li"},"post_logout_redirect")," defaults to the configuration value of\n",(0,i.kt)("inlineCode",{parentName:"li"},"urls.post_logout_redirect"),". If it's an RP-initiated flow and a\n",(0,i.kt)("inlineCode",{parentName:"li"},"post_logout_redirect_uri")," was set and that URL is in the array of the OAuth2\nClient's ",(0,i.kt)("inlineCode",{parentName:"li"},"urls.post_logout_redirect"),", the browser will be redirected there\ninstead.")),(0,i.kt)("h3",{id:"logout-flow"},"Logout Flow"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://mermaid-js.github.io/mermaid-live-editor/#/edit/eyJjb2RlIjoic2VxdWVuY2VEaWFncmFtXG4gICAgVXNlciBBZ2VudC0-Pk9SWSBIeWRyYTogQ2FsbHMgbG9nb3V0IGVuZHBvaW50XG4gICAgT1JZIEh5ZHJhLS0-Pk9SWSBIeWRyYTogVmFsaWRhdGVzIGxvZ291dCBlbmRwb2ludFxuICAgIE9SWSBIeWRyYS0-PkxvZ291dCBQcm92aWRlcjogUmVkaXJlY3RzIGVuZCB1c2VyIHdpdGggbG9nb3V0IGNoYWxsZW5nZVxuICAgIExvZ291dCBQcm92aWRlci0tPk9SWSBIeWRyYTogRmV0Y2hlcyBsb2dvdXQgcmVxdWVzdCBpbmZvXG4gICAgTG9nb3V0IFByb3ZpZGVyLS0-PkxvZ291dCBQcm92aWRlcjogQWNxdWlyZXMgdXNlciBjb25zZW50IGZvciBsb2dvdXQgKG9wdGlvbmFsKVxuICAgIExvZ291dCBQcm92aWRlci0tPk9SWSBIeWRyYTogSW5mb3JtcyB0aGF0IGxvZ291dCByZXF1ZXN0IGlzIGdyYW50ZWRcbiAgICBMb2dvdXQgUHJvdmlkZXItPj5PUlkgSHlkcmE6IFJlZGlyZWN0cyBlbmQgdXNlciB0byByZWRpcmVjdCB1cmwgd2l0aCBsb2dvdXQgY2hhbGxlbmdlXG4gICAgT1JZIEh5ZHJhLS0-Pk9SWSBIeWRyYTogUGVyZm9ybXMgbG9nb3V0IHJvdXRpbmVzXG4gICAgT1JZIEh5ZHJhLS0-VXNlciBBZ2VudDogUmVkaXJlY3RzIHRvIHNwZWNpZmllZCByZWRpcmVjdCB1cmwiLCJtZXJtYWlkIjp7InRoZW1lIjoiZGVmYXVsdCJ9fQ"},(0,i.kt)("img",{parentName:"a",src:"https://mermaid.ink/img/eyJjb2RlIjoic2VxdWVuY2VEaWFncmFtXG4gICAgVXNlciBBZ2VudC0-Pk9SWSBIeWRyYTogQ2FsbHMgbG9nb3V0IGVuZHBvaW50XG4gICAgT1JZIEh5ZHJhLS0-Pk9SWSBIeWRyYTogVmFsaWRhdGVzIGxvZ291dCBlbmRwb2ludFxuICAgIE9SWSBIeWRyYS0-PkxvZ291dCBQcm92aWRlcjogUmVkaXJlY3RzIGVuZCB1c2VyIHdpdGggbG9nb3V0IGNoYWxsZW5nZVxuICAgIExvZ291dCBQcm92aWRlci0tPk9SWSBIeWRyYTogRmV0Y2hlcyBsb2dvdXQgcmVxdWVzdCBpbmZvXG4gICAgTG9nb3V0IFByb3ZpZGVyLS0-PkxvZ291dCBQcm92aWRlcjogQWNxdWlyZXMgdXNlciBjb25zZW50IGZvciBsb2dvdXQgKG9wdGlvbmFsKVxuICAgIExvZ291dCBQcm92aWRlci0tPk9SWSBIeWRyYTogSW5mb3JtcyB0aGF0IGxvZ291dCByZXF1ZXN0IGlzIGdyYW50ZWRcbiAgICBMb2dvdXQgUHJvdmlkZXItPj5PUlkgSHlkcmE6IFJlZGlyZWN0cyBlbmQgdXNlciB0byByZWRpcmVjdCB1cmwgd2l0aCBsb2dvdXQgY2hhbGxlbmdlXG4gICAgT1JZIEh5ZHJhLS0-Pk9SWSBIeWRyYTogUGVyZm9ybXMgbG9nb3V0IHJvdXRpbmVzXG4gICAgT1JZIEh5ZHJhLS0-VXNlciBBZ2VudDogUmVkaXJlY3RzIHRvIHNwZWNpZmllZCByZWRpcmVjdCB1cmwiLCJtZXJtYWlkIjp7InRoZW1lIjoiZGVmYXVsdCJ9fQ",alt:"User Logout Flow Diagram"}))),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"A user-agent (browser) requests the logout endpoint\n(",(0,i.kt)("inlineCode",{parentName:"li"},"/oauth2/sessions/logout"),"). If the request is done on behalf of a RP:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"The URL query MUST contain an ID Token issued by ORY Hydra as the\n",(0,i.kt)("inlineCode",{parentName:"li"},"id_token_hint"),": ",(0,i.kt)("inlineCode",{parentName:"li"},"/oauth2/sessions/logout?id_token_hint=...")),(0,i.kt)("li",{parentName:"ul"},"The URL query MAY contain key ",(0,i.kt)("inlineCode",{parentName:"li"},"post_logout_redirect_uri")," indicating where\nthe user agent should be redirected after the logout completed\nsuccessfully. Each OAuth 2.0 Client can whitelist a list of URIs that can\nbe used as the value using the ",(0,i.kt)("inlineCode",{parentName:"li"},"post_logout_redirect_uris")," metadata field:\n",(0,i.kt)("inlineCode",{parentName:"li"},"/oauth2/sessions/logout?id_token_hint=...&post_logout_redirect_uri=https://i-must-be-whitelisted/")),(0,i.kt)("li",{parentName:"ul"},"If ",(0,i.kt)("inlineCode",{parentName:"li"},"post_logout_redirect_uri")," is set, the URL query SHOULD contain a\n",(0,i.kt)("inlineCode",{parentName:"li"},"state")," value. On successful redirection, this state value will be appended\nto the ",(0,i.kt)("inlineCode",{parentName:"li"},"post_logout_redirect_uri"),". The functionality is equal to the\n",(0,i.kt)("inlineCode",{parentName:"li"},"state")," parameter when performing OAuth2 flows."))),(0,i.kt)("li",{parentName:"ol"},"The user-agent is redirected to the logout provider URL (configuration item\n",(0,i.kt)("inlineCode",{parentName:"li"},"urls.logout"),") and contains a challenge:\n",(0,i.kt)("inlineCode",{parentName:"li"},"https://my-logout-provider/logout?challenge=...")),(0,i.kt)("li",{parentName:"ol"},"The logout provider uses the ",(0,i.kt)("inlineCode",{parentName:"li"},"challenge")," query parameter to fetch metadata\nabout the request. The logout provider may choose to show a UI where the user\nhas to accept the logout request. Alternatively, the logout provider MAY\nchoose to silently accept the logout request."),(0,i.kt)("li",{parentName:"ol"},"To accept the logout request, the logout provider makes a ",(0,i.kt)("inlineCode",{parentName:"li"},"PUT")," call to\n",(0,i.kt)("inlineCode",{parentName:"li"},"/oauth2/auth/requests/logout/accept?challenge=..."),". No request body is\nrequired."),(0,i.kt)("li",{parentName:"ol"},"The response contains a ",(0,i.kt)("inlineCode",{parentName:"li"},"redirect_to")," value where the logout provider\nredirects the user back to."),(0,i.kt)("li",{parentName:"ol"},"ORY Hydra performs OpenID Connect Front- and Back-Channel logout."),(0,i.kt)("li",{parentName:"ol"},"The user agent is being redirected to a specified redirect URL. This may\neither be the default redirect URL set by ",(0,i.kt)("inlineCode",{parentName:"li"},"urls.post_logout_redirect")," or to\nthe value specified by query parameter ",(0,i.kt)("inlineCode",{parentName:"li"},"post_logout_redirect_uri"),".")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"This endpoint does not remove any Access/Refresh Tokens.")),(0,i.kt)("h4",{id:"logout-provider-example-nodejs-pseudo-code"},"Logout Provider Example (NodeJS Pseudo-code)"),(0,i.kt)("p",null,"Following step 1 from the flow above, the user-agent is redirected to the logout\nprovider (e.g. ",(0,i.kt)("inlineCode",{parentName:"p"},"https://my-logout-provider/logout?challenge=..."),"). Next, the\nlogout provider fetches information about the logout request:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-node"},"// This is node-js pseudo code and will not work if you copy it 1:1\n\nchallenge = req.url.query.logout_challenge\n\nfetch(\n  'https://hydra/oauth2/auth/requests/logout?' +\n    querystring.stringify({ logout_challenge: challenge })\n)\n  .then(function (response) {\n    return response.json()\n  })\n  .then(function (response) {\n    // ...\n  })\n")),(0,i.kt)("p",null,"The server response is a JSON object with the following keys:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'{\n    // The user for whom the logout was request.\n    "subject": "user-id",\n\n    // The login session ID that was requested to log out.\n    "sid": "abc..",\n\n    // The original request URL.\n    "request_url": "https://hydra/oauth2/sessions/logout?id_token_hint=...",\n\n    // True if the request was initiated by a Relying Party (RP) / OAuth 2.0 Client. False otherwise.\n    "rp_initiated": true|false\n}\n')),(0,i.kt)("p",null,"Next, the logout provider should decide if the end-user should perform a UI\naction such as confirming the logout request. It is RECOMMENDED to request\nlogout confirmation from the end-user when ",(0,i.kt)("inlineCode",{parentName:"p"},"rp_initiated")," is set to true."),(0,i.kt)("p",null,"When the logout provider decides to accept the logout request, the flow is\ncompleted as follows:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-node"},"fetch(\n  'https://hydra/oauth2/auth/requests/logout/accept?' +\n    querystring.stringify({ logout_challenge: challenge }),\n  {\n    method: 'PUT'\n  }\n)\n  .then(function (response) {\n    return response.json()\n  })\n  .then(function (response) {\n    // The response will contain a `redirect_to` key which contains the URL where the user's user agent must be redirected to next.\n    res.redirect(response.redirect_to)\n  })\n")),(0,i.kt)("p",null,"You can also reject a logout request (e.g. if the user chose to not log out):"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-node"},"fetch(\n  'https://hydra/oauth2/auth/requests/logout/reject?' +\n    querystring.stringify({ logout_challenge: challenge }),\n  {\n    method: 'PUT'\n  }\n).then(function (response) {\n  // Now you can do whatever you want - redirect the user back to your home page or whatever comes to mind.\n})\n")),(0,i.kt)("p",null,"If the logout request was granted and the user agent redirected back to ORY\nHydra, all OpenID Connect Front-/Back-channel logout flows (if set) will be\nperformed and the user will be redirect back to his/her final destination."),(0,i.kt)("h3",{id:"openid-connect-front-channel-logout-10"},(0,i.kt)("a",{parentName:"h3",href:"https://openid.net/specs/openid-connect-frontchannel-1_0.html"},"OpenID Connect Front-Channel Logout 1.0")),(0,i.kt)("p",null,"In summary\n(",(0,i.kt)("a",{parentName:"p",href:"https://openid.net/specs/openid-connect-frontchannel-1_0.html"},"read the spec"),")\nthis feature allows an OAuth 2.0 Client to register fields\n",(0,i.kt)("inlineCode",{parentName:"p"},"frontchannel_logout_uri")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"frontchannel_logout_session_required"),"."),(0,i.kt)("p",null,"If ",(0,i.kt)("inlineCode",{parentName:"p"},"frontchannel_logout_uri")," is set to a valid URL (the host, port, path must\nall match those of one of the Redirect URIs), ORY Hydra will redirect the\nuser-agent (typically browser) to that URL after a logout occurred. This allows\nthe OAuth 2.0 Client Application to log out the end-user in its own system as\nwell - for example by deleting a Cookie or otherwise invalidating the user\nsession."),(0,i.kt)("p",null,"ORY Hydra always appends query parameters values ",(0,i.kt)("inlineCode",{parentName:"p"},"iss")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"sid")," to the\nFront-Channel Logout URI, for example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"https://rp.example.org/frontchannel_logout\n  ?iss=https://server.example.com\n  &sid=08a5019c-17e1-4977-8f42-65a12843ea02\n")),(0,i.kt)("p",null,"Each OpenID Connect ID Token is issued with a ",(0,i.kt)("inlineCode",{parentName:"p"},"sid")," claim that will match the\n",(0,i.kt)("inlineCode",{parentName:"p"},"sid")," value from the Front-Channel Logout URI."),(0,i.kt)("p",null,"ORY Hydra will automatically execute the required HTTP Redirects to make this\nwork. No extra work is required."),(0,i.kt)("h3",{id:"openid-connect-back-channel-logout-10"},(0,i.kt)("a",{parentName:"h3",href:"https://openid.net/specs/openid-connect-backchannel-1_0.html"},"OpenID Connect Back-Channel Logout 1.0")),(0,i.kt)("p",null,"In summary\n(",(0,i.kt)("a",{parentName:"p",href:"https://openid.net/specs/openid-connect-backchannel-1_0.html"},"read the spec"),")\nthis feature allows an OAuth 2.0 Client to register fields\n",(0,i.kt)("inlineCode",{parentName:"p"},"backchannel_logout_uri")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"backchannel_logout_session_required"),"."),(0,i.kt)("p",null,"If ",(0,i.kt)("inlineCode",{parentName:"p"},"backchannel_logout_uri")," is set to a valid URL, a HTTP Post request with\nContent-Type ",(0,i.kt)("inlineCode",{parentName:"p"},"application/x-www-form-urlencoded")," and a ",(0,i.kt)("inlineCode",{parentName:"p"},"logout_token")," will be\nmade to that URL when a end-user logs out. The ",(0,i.kt)("inlineCode",{parentName:"p"},"logout_token")," is a JWT signed\nwith the same key that is used to sign OpenID Connect ID Tokens. You should thus\nvalidate the ",(0,i.kt)("inlineCode",{parentName:"p"},"logout_token")," using the ID Token Public Key (can be fetched from\n",(0,i.kt)("inlineCode",{parentName:"p"},"/.well-known/jwks.json"),"). The ",(0,i.kt)("inlineCode",{parentName:"p"},"logout_token")," contains the following claims:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"iss")," - Issuer Identifier, as specified in Section 2 of ","[OpenID.Core]","."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"aud")," - Audience(s), as specified in Section 2 of ","[OpenID.Core]","."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"iat")," - Issued at time, as specified in Section 2 of ","[OpenID.Core]","."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"jti")," - Unique identifier for the token, as specified in Section 9 of\n","[OpenID.Core]","."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"events")," - Claim whose value is a JSON object containing the member name\n",(0,i.kt)("a",{parentName:"li",href:"http://schemas.openid.net/event/backchannel-logout"},"http://schemas.openid.net/event/backchannel-logout"),". This declares that the JWT\nis a Logout Token. The corresponding member value MUST be a JSON object and\nSHOULD be the empty JSON object {}."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"sid")," - Session ID - String identifier for a Session. This represents a\nSession of a User Agent or device for a logged-in End-User at an RP. Different\nsid values are used to identify distinct sessions at an OP. The sid value need\nonly be unique in the context of a particular issuer. Its contents are opaque\nto the RP. Its syntax is the same as an OAuth 2.0 Client Identifier.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'{\n  "iss": "https://server.example.com",\n  "aud": "s6BhdRkqt3",\n  "iat": 1471566154,\n  "jti": "bWJq",\n  "sid": "08a5019c-17e1-4977-8f42-65a12843ea02",\n  "events": {\n     "http://schemas.openid.net/event/backchannel-logout": {}\n   }\n}\n')),(0,i.kt)("p",null,"An exemplary Back-Channel Logout Request looks as follows:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"POST /backchannel_logout HTTP/1.1\nHost: rp.example.org\nContent-Type: application/x-www-form-urlencoded\n\nlogout_token=eyJhbGci ... .eyJpc3Mi ... .T3BlbklE ...\n")),(0,i.kt)("p",null,"The Logout Token must be validated as follows:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Validate the Logout Token signature in the same way that an ID Token signature\nis validated, with the following refinements."),(0,i.kt)("li",{parentName:"ul"},"Validate the iss, aud, and iat Claims in the same way they are validated in ID\nTokens."),(0,i.kt)("li",{parentName:"ul"},"Verify that the Logout Token contains a sid Claim."),(0,i.kt)("li",{parentName:"ul"},"Verify that the Logout Token contains an events Claim whose value is JSON\nobject containing the member name\n",(0,i.kt)("a",{parentName:"li",href:"http://schemas.openid.net/event/backchannel-logout"},"http://schemas.openid.net/event/backchannel-logout"),"."),(0,i.kt)("li",{parentName:"ul"},"Verify that the Logout Token does not contain a nonce Claim."),(0,i.kt)("li",{parentName:"ul"},"Optionally verify that another Logout Token with the same jti value has not\nbeen recently received.")),(0,i.kt)("p",null,"The endpoint then returns a HTTP 200 OK response. Cache-Control headers should\nbe set to:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Cache-Control: no-cache, no-store\nPragma: no-cache\n")),(0,i.kt)("p",null,"Because the OpenID Connect Back-Channel Logout Flow is not executed using the\nuser-agent (e.g. Browser) but from ORY Hydra directly, the session cookie of the\nend-user will not be available to the OAuth 2.0 Client and the session has to be\ninvalidated by some other means (e.g. by blacklisting the session ID)."))}p.isMDXComponent=!0},11748:function(e,t,n){var o={"./locale":89234,"./locale.js":89234};function a(e){var t=i(e);return n(t)}function i(e){if(!n.o(o,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return o[e]}a.keys=function(){return Object.keys(o)},a.resolve=i,e.exports=a,a.id=11748}}]);