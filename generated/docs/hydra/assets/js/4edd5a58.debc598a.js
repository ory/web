(window.webpackJsonp=window.webpackJsonp||[]).push([[166],{238:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return o})),r.d(t,"metadata",(function(){return c})),r.d(t,"toc",(function(){return s})),r.d(t,"default",(function(){return l}));var n=r(3),i=r(8),a=(r(0),r(570)),o={id:"migrating-from-mitreid",title:"Migrating from MITREid"},c={unversionedId:"guides/migrating-from-mitreid",id:"guides/migrating-from-mitreid",isDocsHomePage:!1,title:"Migrating from MITREid",description:"Please note this page doesn't pretend to be a step-by-step guide.",source:"@site/docs/guides/migrating-from-mitreid.mdx",sourceDirName:"guides",slug:"/guides/migrating-from-mitreid",permalink:"/hydra/docs/next/guides/migrating-from-mitreid",editUrl:"https://github.com/ory/hydra/edit/master/docs/docs/guides/migrating-from-mitreid.mdx",version:"current",lastUpdatedBy:"aeneasr",lastUpdatedAt:1619175811,formattedLastUpdatedAt:"4/23/2021",frontMatter:{id:"migrating-from-mitreid",title:"Migrating from MITREid"},sidebar:"docs",previous:{title:"Gitlab Hydra integration",permalink:"/hydra/docs/next/guides/gitlab"},next:{title:"Merge multiple Hydra instances with different system.secrets",permalink:"/hydra/docs/next/guides/merge-multiple-db-secrets"}},s=[],d={toc:s};function l(e){var t=e.components,r=Object(i.a)(e,["components"]);return Object(a.b)("wrapper",Object(n.a)({},d,r,{components:t,mdxType:"MDXLayout"}),Object(a.b)("div",{className:"admonition admonition-info alert alert--info"},Object(a.b)("div",{parentName:"div",className:"admonition-heading"},Object(a.b)("h5",{parentName:"div"},Object(a.b)("span",{parentName:"h5",className:"admonition-icon"},Object(a.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(a.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),Object(a.b)("div",{parentName:"div",className:"admonition-content"},Object(a.b)("p",{parentName:"div"},"Please note this page doesn't pretend to be a step-by-step guide."))),Object(a.b)("p",null,"This piece of documentation will try to give you some hints to move your current\nMITREid instance to Hydra."),Object(a.b)("h4",{id:"scopes"},"Scopes"),Object(a.b)("p",null,"Scopes in hydra doesn't have a relational entity, every client defines its own\narray of scopes."),Object(a.b)("h4",{id:"scope-vs-scp"},"Scope vs Scp"),Object(a.b)("p",null,"Since hydra uses scp as the scope claim, you have to be sure your client\nlibraries are capable to use both, we had to modify the behavior of our version\nof spring.security.oauth2 library following the example:\n",Object(a.b)("a",{parentName:"p",href:"https://dev.to/toojannarong/spring-security-with-jwt-the-easiest-way-2i43"},"Custom claim")),Object(a.b)("h4",{id:"query-string-parameters"},"Query String Parameters"),Object(a.b)("p",null,"MITREid doesn't mind if the parameters are passed in the body or in the query\nstring. In order to work with hydra, you have to migrate all your calls that are\nusing QS params to Body Parameters."),Object(a.b)("p",null,"For example, you should move from"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre"},'curl -X POST  http://127.0.0.1/mitreid-server/token?grant_type=client_credentials -H "Authorization: $AUTH" ...\n')),Object(a.b)("p",null,"to"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre"},"curl -X POST  http://127.0.0.1/mitreid-server/token -H \"Authorization: $AUTH\" --data-urlencode 'grant_type=client_credentials' ...\n")),Object(a.b)("h4",{id:"scope-strategies-if-no-scope-is-requested"},"Scope Strategies if no scope is requested"),Object(a.b)("p",null,"The last pitfall found during the migration was the difference of behaviour when\nperforming the ",Object(a.b)("inlineCode",{parentName:"p"},"client_credentials")," grant without specifying a scope. By default\nORY Hydra returns an empty scope, but MITREid grants the default scope for the\nOAuth 2.0 Client."),Object(a.b)("p",null,"To change the behaviour in ORY Hydra, either set environment variable\n",Object(a.b)("inlineCode",{parentName:"p"},"OAUTH2_CLIENT_CREDENTIALS_DEFAULT_GRANT_SCOPE=true")," or alternatively add to ORY\nHydra's configuration file:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-yaml",metastring:'title="path/to/hydra.yaml"',title:'"path/to/hydra.yaml"'},"oauth2:\n  client_credentials:\n    default_grant_allowed_scope: true\n")),Object(a.b)("p",null,"Once set, ORY Hydra will behave like MITREid and grant the OAuth2 Client's scope\nwhen an empty scope is requested for a ",Object(a.b)("inlineCode",{parentName:"p"},"client_credentials")," grant."))}l.isMDXComponent=!0},570:function(e,t,r){"use strict";r.d(t,"a",(function(){return p})),r.d(t,"b",(function(){return b}));var n=r(0),i=r.n(n);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var d=i.a.createContext({}),l=function(e){var t=i.a.useContext(d),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},p=function(e){var t=l(e.components);return i.a.createElement(d.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},m=i.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,o=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),p=l(r),m=n,b=p["".concat(o,".").concat(m)]||p[m]||u[m]||a;return r?i.a.createElement(b,c(c({ref:t},d),{},{components:r})):i.a.createElement(b,c({ref:t},d))}));function b(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,o=new Array(a);o[0]=m;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:n,o[1]=c;for(var d=2;d<a;d++)o[d]=r[d];return i.a.createElement.apply(null,o)}return i.a.createElement.apply(null,r)}m.displayName="MDXCreateElement"}}]);