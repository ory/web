(self.webpackChunkdocusaurus_template=self.webpackChunkdocusaurus_template||[]).push([[36877],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return d},kt:function(){return h}});var i=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=i.createContext({}),u=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=u(e.components);return i.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},p=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=u(n),h=a,m=p["".concat(s,".").concat(h)]||p[h]||c[h]||r;return n?i.createElement(m,o(o({ref:t},d),{},{components:n})):i.createElement(m,o({ref:t},d))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,o=new Array(r);o[0]=p;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var u=2;u<r;u++)o[u]=n[u];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}p.displayName="MDXCreateElement"},13919:function(e,t,n){"use strict";function i(e){return!0===/^(\w*:|\/\/)/.test(e)}function a(e){return void 0!==e&&!i(e)}n.d(t,{b:function(){return i},Z:function(){return a}})},44996:function(e,t,n){"use strict";n.d(t,{C:function(){return r},Z:function(){return o}});var i=n(52263),a=n(13919);function r(){var e=(0,i.Z)().siteConfig,t=(e=void 0===e?{}:e).baseUrl,n=void 0===t?"/":t,r=e.url;return{withBaseUrl:function(e,t){return function(e,t,n,i){var r=void 0===i?{}:i,o=r.forcePrependBaseUrl,l=void 0!==o&&o,s=r.absolute,u=void 0!==s&&s;if(!n)return n;if(n.startsWith("#"))return n;if((0,a.b)(n))return n;if(l)return t+n;var d=n.startsWith(t)?n:t+n.replace(/^\//,"");return u?e+d:d}(r,n,e,t)}}}function o(e,t){return void 0===t&&(t={}),(0,r().withBaseUrl)(e,t)}},54755:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return u},metadata:function(){return d},toc:function(){return c},default:function(){return h}});var i=n(22122),a=n(19756),r=(n(67294),n(3905)),o=n(44996),l=["components"],s={id:"debugging",title:"Common Problems & Debugging"},u=void 0,d={unversionedId:"debugging",id:"version-v1.4/debugging",isDocsHomePage:!1,title:"Common Problems & Debugging",description:"Spec-compliant OAuth 2.0 and OpenID Connect is hard. Let's take a look how to",source:"@site/versioned_docs/version-v1.4/debugging.mdx",sourceDirName:".",slug:"/debugging",permalink:"/hydra/docs/v1.4/debugging",editUrl:"https://github.com/ory/hydra/edit/master/docs/versioned_docs/version-v1.4/debugging.mdx",version:"v1.4",lastUpdatedBy:"hackerman",lastUpdatedAt:1588407142,formattedLastUpdatedAt:"5/2/2020",frontMatter:{id:"debugging",title:"Common Problems & Debugging"},sidebar:"version-v1.4/docs",previous:{title:"Preparing for Production",permalink:"/hydra/docs/v1.4/production"},next:{title:"Advanced Topics",permalink:"/hydra/docs/v1.4/advanced"}},c=[{value:"First Aid",id:"first-aid",children:[]},{value:"I am running into CSRF issues",id:"i-am-running-into-csrf-issues",children:[]},{value:"Logout is not working as expected",id:"logout-is-not-working-as-expected",children:[]},{value:"OpenID Connect ID Token missing",id:"openid-connect-id-token-missing",children:[]},{value:"OAuth 2.0 Refresh Token is missing",id:"oauth-20-refresh-token-is-missing",children:[]},{value:"OAuth 2.0 Authorize Code Flow fails",id:"oauth-20-authorize-code-flow-fails",children:[{value:"Wrong or misconfigured OAuth 2.0 Client",id:"wrong-or-misconfigured-oauth-20-client",children:[]},{value:"Redirect URL is not whitelisted",id:"redirect-url-is-not-whitelisted",children:[]},{value:"OAuth 2.0 Client ID and secret are sent in body instead of header",id:"oauth-20-client-id-and-secret-are-sent-in-body-instead-of-header",children:[]}]},{value:"Distributed Tracing",id:"distributed-tracing",children:[{value:"What is this?",id:"what-is-this",children:[]},{value:"What a Hydra trace includes",id:"what-a-hydra-trace-includes",children:[]},{value:"Alright, how can I set this up locally?",id:"alright-how-can-i-set-this-up-locally",children:[]},{value:"Tracing configurations",id:"tracing-configurations",children:[]}]}],p={toc:c};function h(e){var t=e.components,n=(0,a.Z)(e,l);return(0,r.kt)("wrapper",(0,i.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Spec-compliant OAuth 2.0 and OpenID Connect is hard. Let's take a look how to\nresolve certain issues."),(0,r.kt)("h2",{id:"first-aid"},"First Aid"),(0,r.kt)("p",null,"There are three things you can do to quickly debug any issue:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Check the logs. ORY Hydra has extensive logging and you will find the issue\nmost likely in the logs. Here is an example log line for a client that\nrequested a redirect URL that did not match the whitelisted redirect URLS:\n",(0,r.kt)("inlineCode",{parentName:"li"},'time="2018-08-07T16:01:16Z" level=error msg="An error occurred" description="The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed" error=invalid_request hint="The \\"redirect_uri\\" parameter does not match any of the OAuth 2.0 Client\'s pre-registered redirect urls."')),(0,r.kt)("li",{parentName:"ol"},"Check the URL because of two reasons:",(0,r.kt)("ol",{parentName:"li"},(0,r.kt)("li",{parentName:"ol"},"ORY Hydra sends ",(0,r.kt)("inlineCode",{parentName:"li"},"error_hint"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"error"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"error_description"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"error_debug"),"\nin the URL. You will find the cause of the error most likely in there."),(0,r.kt)("li",{parentName:"ol"},"You are maybe in the wrong URL. Make sure the host and port and path is\ncorrect. This happens often, especially when you're just starting out and\nexperimenting"))),(0,r.kt)("li",{parentName:"ol"},"Set environment variable ",(0,r.kt)("inlineCode",{parentName:"li"},"OAUTH2_EXPOSE_INTERNAL_ERRORS=true"),". Do not do this\nin production, it is possible, though unlikely, that important data leaks\nwith this. If set to true, ORY Hydra will set the ",(0,r.kt)("inlineCode",{parentName:"li"},"error_debug")," query\nparameter if debug information is available."),(0,r.kt)("li",{parentName:"ol"},"If you're just starting out and experimenting your docker set up does not\nwork at all:",(0,r.kt)("ol",{parentName:"li"},(0,r.kt)("li",{parentName:"ol"},"Stop all containers"),(0,r.kt)("li",{parentName:"ol"},"Remove them (unless you have something important running)"),(0,r.kt)("li",{parentName:"ol"},"Retry. ",(0,r.kt)("strong",{parentName:"li"},"This can help a lot if you are new to this!"))))),(0,r.kt)("h2",{id:"i-am-running-into-csrf-issues"},"I am running into CSRF issues"),(0,r.kt)("p",null,"We protect the Login and Consent flows using CSRF Cookies. This mitigates several attack vectors but\ncan lead cause issues when misconfigured. The most common causes of CSRF issues are the following:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"You are mixing domains with IP addresses in your request - for example using ",(0,r.kt)("inlineCode",{parentName:"li"},"127.0.0.1")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"localhost"),"\nin the same flow."),(0,r.kt)("li",{parentName:"ul"},"You are running ORY Hydra via HTTP but are missing the ",(0,r.kt)("inlineCode",{parentName:"li"},"--dangerous-force-http")," CLI flag."),(0,r.kt)("li",{parentName:"ul"},'You are running the OAuth2 flow in separate browsers, or in a browser with incognito mode. The Brave browser\nis also known for notoriously discarding cookies when used in "No-Tracking" mode.'),(0,r.kt)("li",{parentName:"ul"},"You are running ORY Hydra behind a Reverse Proxy (e.g. Load Balancer) that strips the Cookie header. If the\nreverse proxy supports path rewrites that might also cause issues!"),(0,r.kt)("li",{parentName:"ul"},"You are trying to do two OAuth2 flows at the same time in the same Browser."),(0,r.kt)("li",{parentName:"ul"},"You have changed the Cookie SameSite behavior. If this is the default value (you did not change it), this should\nnot be an issue.")),(0,r.kt)("p",null,":::warn\nYou cannot call ",(0,r.kt)("inlineCode",{parentName:"p"},"/oauth2/auth")," using an AJAX request. It is not allowed and not possible with OAuth2.\nThis endpoint can only be accessed using a normal browser request.\n:::"),(0,r.kt)("h2",{id:"logout-is-not-working-as-expected"},"Logout is not working as expected"),(0,r.kt)("p",null,"Sometimes, calling ",(0,r.kt)("inlineCode",{parentName:"p"},"/oauth2/sessions/logout")," does not behave as expected, for\nexample:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"An error occurs."),(0,r.kt)("li",{parentName:"ul"},"You are being redirected directly to the post_logout_redirect_uri instead of the logout\nUI.")),(0,r.kt)("p",null,'First of all, there are two types of logout requests - one is called "OP (OpenID\nProvider) Initiated" and one "RP (Relying Party) Initiated". The first flow MUST\nNEITHER contain the ',(0,r.kt)("inlineCode",{parentName:"p"},"id_token_hint"),", nor a ",(0,r.kt)("inlineCode",{parentName:"p"},"state"),", nor\n",(0,r.kt)("inlineCode",{parentName:"p"},"post_logout_redirect_uri"),"."),(0,r.kt)("p",null,"If no active authentication session is set at ORY Hydra, the browser will be\nredirected immediately to the system-wide configured post logout redirect URI."),(0,r.kt)("p",null,"An active session may be missing because:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"You are mixing up domain names (e.g. 127.0.0.1 and localhost - ",(0,r.kt)("strong",{parentName:"li"},"this is a\ncommon mistake"),")"),(0,r.kt)("li",{parentName:"ul"},"You are running ORY Hydra behind a proxy that messes with Cookies"),(0,r.kt)("li",{parentName:"ul"},"You are using a Browser with a very strict privacy policy which makes it\ndifficult or impossible for ORY Hydra to properly set cookies. We've observed\nthat the ",(0,r.kt)("strong",{parentName:"li"},"Brave Browser")," is very, very difficult here."),(0,r.kt)("li",{parentName:"ul"},"You did not set ",(0,r.kt)("inlineCode",{parentName:"li"},"remember: true")," when accepting the login request")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Before filing a bug report, make sure you actually have a cookie named\n",(0,r.kt)("inlineCode",{parentName:"strong"},"oauth2_authentication_session")," for the URL ORY Hydra is running on, and\nespecially for the domain that's in your ",(0,r.kt)("inlineCode",{parentName:"strong"},"http://.../oauth2/sessions/logout"))),(0,r.kt)("p",null,"If ",(0,r.kt)("inlineCode",{parentName:"p"},"id_token_hint")," is set, you may define both ",(0,r.kt)("inlineCode",{parentName:"p"},"state")," and\n",(0,r.kt)("inlineCode",{parentName:"p"},"post_logout_redirect_uri"),". The same problems can cause this flow to behave\nunexpectedly as listed above, with the only difference that now ORY Hydra knows\nwho the user to be logged out is (from the ",(0,r.kt)("inlineCode",{parentName:"p"},"id_token_hint"),") and if any\nFront-/Back-channel Logout is configured for that client, it will be executed\neven if there is no valid authentication session for that user in ORY Hydra."),(0,r.kt)("h2",{id:"openid-connect-id-token-missing"},"OpenID Connect ID Token missing"),(0,r.kt)("p",null,"If you expect an OAuth 2.0 ID Token but are not receiving one, this can have\nmultiple reasons:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"You are using the ",(0,r.kt)("inlineCode",{parentName:"li"},"client_credentials")," grant which can not return an ID\ntoken."),(0,r.kt)("li",{parentName:"ol"},"You forgot to request the ",(0,r.kt)("inlineCode",{parentName:"li"},"openid")," scope when calling\n",(0,r.kt)("inlineCode",{parentName:"li"},"/oauth2/auth?response_type=code")," (Authorize Code Flow - correct would be\n",(0,r.kt)("inlineCode",{parentName:"li"},"/oauth2/auth?response_type=code&scope=openid"),") or the ",(0,r.kt)("inlineCode",{parentName:"li"},"id_token")," response\ntype when calling ",(0,r.kt)("inlineCode",{parentName:"li"},"/oauth2/auth?response_type=token")," (Implicit/Hybrid flow -\ncorrect would be ",(0,r.kt)("inlineCode",{parentName:"li"},"/oauth2/auth?response_type=token+id_token&scope=openid")," or\nany other combination such as ",(0,r.kt)("inlineCode",{parentName:"li"},"response_type=id_token"),",\n",(0,r.kt)("inlineCode",{parentName:"li"},"response_type=token+code+id_token"),")."),(0,r.kt)("li",{parentName:"ol"},"You consent app did not send ",(0,r.kt)("inlineCode",{parentName:"li"},'granted_scope: ["openid"]')," or when accepting\nthe consent request."),(0,r.kt)("li",{parentName:"ol"},"The OAuth 2.0 Client making the request is not allowed to request the scope\n",(0,r.kt)("inlineCode",{parentName:"li"},"openid"),".")),(0,r.kt)("h2",{id:"oauth-20-refresh-token-is-missing"},"OAuth 2.0 Refresh Token is missing"),(0,r.kt)("p",null,"If you expect an OAuth 2.0 Refresh Token but are not receiving one, this can\nhave multiple reasons:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"You are using an implicit or hybrid flow. These flows never return a refresh\ntoken!"),(0,r.kt)("li",{parentName:"ol"},"You are using the ",(0,r.kt)("inlineCode",{parentName:"li"},"client_credentials")," grant which can not return a refresh\ntoken."),(0,r.kt)("li",{parentName:"ol"},"You forgot to request the ",(0,r.kt)("inlineCode",{parentName:"li"},"offline")," or ",(0,r.kt)("inlineCode",{parentName:"li"},"offline_access")," scope when calling\n",(0,r.kt)("inlineCode",{parentName:"li"},"/oauth2/auth"),"."),(0,r.kt)("li",{parentName:"ol"},"You consent app did not send ",(0,r.kt)("inlineCode",{parentName:"li"},'granted_scope: ["offline"]')," or\n",(0,r.kt)("inlineCode",{parentName:"li"},'granted_scope: ["offline_access"]')," when accepting the consent request."),(0,r.kt)("li",{parentName:"ol"},"The OAuth 2.0 Client making the request is not allowed to request the scope\n",(0,r.kt)("inlineCode",{parentName:"li"},"openid"),".")),(0,r.kt)("h2",{id:"oauth-20-authorize-code-flow-fails"},"OAuth 2.0 Authorize Code Flow fails"),(0,r.kt)("p",null,"The most likely cause is misconfiguration, summarized in the next sections."),(0,r.kt)("h3",{id:"wrong-or-misconfigured-oauth-20-client"},"Wrong or misconfigured OAuth 2.0 Client"),(0,r.kt)("p",null,"You are using the wrong OAuth 2.0 Client or the OAuth 2.0 Client has a broken\nconfiguration. To check that you're using the right client, run:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"hydra clients get --endpoint http://ory-hydra <the-client-id>\n")),(0,r.kt)("p",null,"The result shows you the whole client (excluding its secret). Check that the\nvalues are correct. Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'{\n        "client_id": "my-client",\n        "grant_types": [\n                "authorization_code"\n        ],\n        "jwks": {},\n        "redirect_uris": [\n                "http://127.0.0.1:5556/callback"\n        ],\n        "response_types": [\n                "code"\n        ],\n        "scope": "openid offline",\n        "subject_type": "pairwise",\n        "token_endpoint_auth_method": "client_secret_basic",\n        "userinfo_signed_response_alg": "none"\n}\n')),(0,r.kt)("h3",{id:"redirect-url-is-not-whitelisted"},"Redirect URL is not whitelisted"),(0,r.kt)("p",null,"A likely cause of your request failing is that you are using the wrong redirect\nURL. Assuming your OAuth 2.0 URL looks like\n",(0,r.kt)("inlineCode",{parentName:"p"},"http://ory-hydra/oauth2/auth?client_id=my-client&...&redirect_uri=http://my-url/callback")),(0,r.kt)("p",null,"The redirect URL ",(0,r.kt)("inlineCode",{parentName:"p"},"http://my-url/callback")," must be whitelisted in your client\nconfiguration. The URLs must match ",(0,r.kt)("strong",{parentName:"p"},"exactly"),". URL ",(0,r.kt)("inlineCode",{parentName:"p"},"http://my-url/callback")," and\n",(0,r.kt)("inlineCode",{parentName:"p"},"http://my-url/callback?foo=bar")," are different URLs!"),(0,r.kt)("p",null,"To see the whitelisted redirect_uris, check the client:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'hydra clients get --endpoint http://ory-hydra <the-client-id>\n\n{\n        // ...\n        "redirect_uris": [\n                "http://127.0.0.1:5556/callback"\n        ],\n        // ...\n}\n')),(0,r.kt)("p",null,"Here you see that ",(0,r.kt)("inlineCode",{parentName:"p"},"http://my-url/callback")," is not in the list, which is why the\nrequest fails."),(0,r.kt)("h3",{id:"oauth-20-client-id-and-secret-are-sent-in-body-instead-of-header"},"OAuth 2.0 Client ID and secret are sent in body instead of header"),(0,r.kt)("p",null,"There are multiple ways of authenticating OAuth 2.0 Clients at the\n",(0,r.kt)("inlineCode",{parentName:"p"},"/oauth2/token"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"HTTP Basic Authorization (",(0,r.kt)("inlineCode",{parentName:"li"},"client_secret_basic"),") - the OAuth 2.0 Client ID and\nsecret are sent in the HTTP Header (",(0,r.kt)("inlineCode",{parentName:"li"},"Authorization: basic ...."),")"),(0,r.kt)("li",{parentName:"ul"},"HTTP Body (",(0,r.kt)("inlineCode",{parentName:"li"},"client_secret_post"),") - the OAuth 2.0 Client ID and secret are sent\nin the POST body (",(0,r.kt)("inlineCode",{parentName:"li"},"Content-Type: application/x-www-form-urlencoded"),")")),(0,r.kt)("p",null,"Both are valid schemes. But the OAuth 2.0 Client has to be configured to allow\neither of the one. Per default, the OAuth 2.0 Client allows HTTP Basic\nAuthorization only. You can check which method is allowed:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'hydra clients get --endpoint http://ory-hydra <the-client-id>\n{\n        // ...\n        "token_endpoint_auth_method": "client_secret_basic",\n        // ...\n}\n')),(0,r.kt)("p",null,"As you can see, this client is allowed to authorize using HTTP Basic\nAuthorization. If you try to authorize with the client credentials in the POST\nbody, the authentication process will fail. To allow a client to perform the\nPOST authorization scheme, you must set\n",(0,r.kt)("inlineCode",{parentName:"p"},'"token_endpoint_auth_method": "client_secret_post"'),". You can do this in the CLI\nwith the ",(0,r.kt)("inlineCode",{parentName:"p"},"--token-endpoint-auth-method")," flag."),(0,r.kt)("h2",{id:"distributed-tracing"},"Distributed Tracing"),(0,r.kt)("h3",{id:"what-is-this"},"What is this?"),(0,r.kt)("p",null,"Configuring Distributed Tracing (DT) will enable you to obtain a visualization\nof the call paths that take place in order to process a request made to Hydra.\nIt's yet another tool that you can use to aid you in profiling, debugging and\nultimately understanding your deployment of Hydra better. Hydra currently\nsupports the following tracing options:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Tracing backend(s): Jaeger - ",(0,r.kt)("em",{parentName:"li"},"Note: adding support for other\n",(0,r.kt)("a",{parentName:"em",href:"https://opentracing.io/docs/supported-tracers"},"opentracing compliant backends"),"\nis planned. To aid in priority, please\n",(0,r.kt)("a",{parentName:"em",href:"https://github.com/ory/hydra/issues"},"create an issue")," with your feature\nrequest.")),(0,r.kt)("li",{parentName:"ul"},"Following existing traces: If you have deployed Hydra behind a proxy that has\ninitiated a trace, Hydra will attempt to join that trace by examining the\nrequest headers for tracing context.")),(0,r.kt)("h3",{id:"what-a-hydra-trace-includes"},"What a Hydra trace includes"),(0,r.kt)("p",null,"In DT speak, a trace is comprised of one or more spans which are logical units\nof work. Each Hydra span is encapsulated with the following state:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"A name"),(0,r.kt)("li",{parentName:"ul"},"A start time"),(0,r.kt)("li",{parentName:"ul"},"A finish time"),(0,r.kt)("li",{parentName:"ul"},"A set of zero or more tags")),(0,r.kt)("p",null,"Hydra currently creates the following spans:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Top level span (",(0,r.kt)("em",{parentName:"li"},"named after the request path"),") for the requested endpoint.\nSpan tags: - http method - http status code - error IFF status code >= 400"),(0,r.kt)("li",{parentName:"ul"},"Child span will be created if bcrypt (",(0,r.kt)("em",{parentName:"li"},"e.g. when the token endpoint is\ncalled"),") is called. Span tags: - bcrypt work factor"),(0,r.kt)("li",{parentName:"ul"},"All SQL database interactions. Spans/tags will vary depending on the database\ndriver used.")),(0,r.kt)("p",null,"This is still evolving and subject to change as tracing support continues to\nexpand in Hydra. If you see something that is missing/wrong, please create an\nissue."),(0,r.kt)("h3",{id:"alright-how-can-i-set-this-up-locally"},"Alright, how can I set this up locally?"),(0,r.kt)("p",null,"The\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/ory/hydra/blob/master/quickstart-tracing.yml"},"provided docker-compose file"),"\nin the project repository has tracing configuration w/ jaeger added which you\ncan use to play around with. Simply uncomment the configurations associated with\ntracing as so:"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Under the Hydra service definition ",(0,r.kt)("inlineCode",{parentName:"strong"},"depends_on")," configs, uncomment the\nfollowing:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"- jaeger\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Under the Hydra service definition ",(0,r.kt)("inlineCode",{parentName:"strong"},"environment")," configs, uncomment the\nfollowing:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"- TRACING_PROVIDER\n- TRACING_PROVIDER_JAEGER_SAMPLING_SERVER_URL\n- TRACING_PROVIDER_JAEGER_LOCAL_AGENT_ADDRESS\n- TRACING_PROVIDER_JAEGER_SAMPLING_TYPE\n- TRACING_PROVIDER_JAEGER_SAMPLING_VALUE\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Uncomment the Jaeger service definition:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'jaeger:\n  image: jaegertracing/all-in-one:1.7.0\n  ports:\n  - "5775:5775/udp"\n  - "6831:6831/udp"\n  - "6832:6832/udp"\n  - "5778:5778"\n  - "16686:16686"\n  - "14268:14268"\n  - "9411:9411"\n')),(0,r.kt)("p",null,"Then simply run ",(0,r.kt)("inlineCode",{parentName:"p"},"docker-compose up"),". Grab a coffee or stretch while you wait for\neverything to come up. You will then be able to navigate to the Jaeger UI which\nyou have exposed on port ",(0,r.kt)("inlineCode",{parentName:"p"},"16686")," at http://localhost:16686/search. You can now\nstart making requests to Hydra and inspect traces!"),(0,r.kt)("p",null,"As an example, here is a trace created by making a bad request to the\n",(0,r.kt)("inlineCode",{parentName:"p"},"POST /clients")," endpoint:"),(0,r.kt)("img",{alt:"Sample Trace",src:(0,o.Z)("/images/docs/hydra/sample_trace.png")}),";",(0,r.kt)("p",null,"At a glance, you are able to see that:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"The request failed"),(0,r.kt)("li",{parentName:"ul"},"The request took ~80ms"),(0,r.kt)("li",{parentName:"ul"},"It resulted in a 409"),(0,r.kt)("li",{parentName:"ul"},"The hash comparison to validate the client's credentials took a whopping 70ms.\nBcrypt is expensive!"),(0,r.kt)("li",{parentName:"ul"},"The various database operations performed")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Note: in order to see spans around database interactions, you must be using a\nSQL backend (i.e. MySQL or Postgres).")),(0,r.kt)("h3",{id:"tracing-configurations"},"Tracing configurations"),(0,r.kt)("p",null,"The CLI will provide you with the list of Hydra tracing configurations and their\nsupported values. Simply run:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"docker exec -it hydra_hydra_1 hydra serve --help\n")),(0,r.kt)("p",null,"And read the section on ",(0,r.kt)("inlineCode",{parentName:"p"},"DEBUG CONTROLS"),"."))}h.isMDXComponent=!0}}]);