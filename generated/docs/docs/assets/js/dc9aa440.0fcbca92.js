(self.webpackChunkdocusaurus_template=self.webpackChunkdocusaurus_template||[]).push([[4738],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return p},kt:function(){return m}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(n),m=i,f=d["".concat(s,".").concat(m)]||d[m]||u[m]||a;return n?r.createElement(f,o(o({ref:t},p),{},{components:n})):r.createElement(f,o({ref:t},p))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var c=2;c<a;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},574:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return p},default:function(){return d}});var r=n(2122),i=n(9756),a=(n(7294),n(3905)),o=["components"],l={id:"api-design",title:"API Design"},s=void 0,c={unversionedId:"ecosystem/api-design",id:"ecosystem/api-design",isDocsHomePage:!1,title:"API Design",description:"This chapter contains generally applicable information on API design. When using",source:"@site/docs/ecosystem/api-design.md",sourceDirName:"ecosystem",slug:"/ecosystem/api-design",permalink:"/docs/ecosystem/api-design",editUrl:"https://github.com/ory/docs/edit/master/docs/docs/ecosystem/api-design.md",version:"current",lastUpdatedBy:"Vincent",lastUpdatedAt:1617015841,formattedLastUpdatedAt:"3/29/2021",frontMatter:{id:"api-design",title:"API Design"},sidebar:"docs",previous:{title:"Sessions",permalink:"/docs/concepts/session"},next:{title:"Software Architecture and Philosophy",permalink:"/docs/ecosystem/software-architecture-philosophy"}},p=[{value:"Pagination",id:"pagination",children:[{value:"Total Count",id:"total-count",children:[]}]},{value:"Date Format",id:"date-format",children:[]}],u={toc:p};function d(e){var t=e.components,n=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"This chapter contains generally applicable information on API design. When using\nOry services, one can expect a consistent experience when interacting with REST\nAPIs."),(0,a.kt)("h2",{id:"pagination"},"Pagination"),(0,a.kt)("p",null,"On REST endpoints that are explicitly labeled as such, pagination information is\navailable through the ",(0,a.kt)("inlineCode",{parentName:"p"},"Link")," HTTP header."),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"Link")," header contains a comma-delimited list of links to the following\npages (where applicable):"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"First"),(0,a.kt)("li",{parentName:"ul"},"Next"),(0,a.kt)("li",{parentName:"ul"},"Previous (prev)"),(0,a.kt)("li",{parentName:"ul"},"Last")),(0,a.kt)("p",null,"Pages are created based on the values of ",(0,a.kt)("inlineCode",{parentName:"p"},"limit")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"offset")," provided in the\nquerystring, where ",(0,a.kt)("inlineCode",{parentName:"p"},"limit")," is the page size, and ",(0,a.kt)("inlineCode",{parentName:"p"},"offset")," is the current item.\nThe ",(0,a.kt)("inlineCode",{parentName:"p"},"limit")," parameter always has an API specific upper bound to prevent DoS."),(0,a.kt)("p",null,"In most scenarios, the ",(0,a.kt)("inlineCode",{parentName:"p"},"offset")," should be a multiple of the ",(0,a.kt)("inlineCode",{parentName:"p"},"limit"),"."),(0,a.kt)("p",null,"Example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'> GET hydra-admin/clients?limit=5&offset=10 HTTP/1.1\n> Host: localhost:4445\n> User-Agent: curl/7.64.1\n> Accept: */*\n>\n< HTTP/1.1 200 OK\n< Content-Type: application/json\n< Link: <hydra-admin/clients?limit=5&offset=0>; rel="first",</clients?limit=5&offset=15>; rel="next",</clients?limit=5&offset=5>; rel="prev",</clients?limit=5&offset=20>; rel="last"\n< X-Total-Count: 123\n< Date: Mon, 22 Apr 2019 23:34:29 GMT\n< Transfer-Encoding: chunked\n<\n[...]\n')),(0,a.kt)("h3",{id:"total-count"},"Total Count"),(0,a.kt)("p",null,"You can get the total item count from the ",(0,a.kt)("inlineCode",{parentName:"p"},"X-Total-Count")," HTTP Header."),(0,a.kt)("h2",{id:"date-format"},"Date Format"),(0,a.kt)("p",null,"Ory's APIs use ",(0,a.kt)("a",{parentName:"p",href:"https://tools.ietf.org/html/rfc3339"},"rfc3339")," as the date\nformat:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'{\n  "created_at": "2006-01-02T15:04:05Z07:00"\n}\n')))}d.isMDXComponent=!0}}]);