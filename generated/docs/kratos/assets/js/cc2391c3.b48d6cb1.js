(self.webpackChunkdocusaurus_template=self.webpackChunkdocusaurus_template||[]).push([[2488],{3905:function(t,e,n){"use strict";n.d(e,{Zo:function(){return u},kt:function(){return g}});var r=n(67294);function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function i(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function o(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?i(Object(n),!0).forEach((function(e){a(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function s(t,e){if(null==t)return{};var n,r,a=function(t,e){if(null==t)return{};var n,r,a={},i=Object.keys(t);for(r=0;r<i.length;r++)n=i[r],e.indexOf(n)>=0||(a[n]=t[n]);return a}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(r=0;r<i.length;r++)n=i[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(a[n]=t[n])}return a}var c=r.createContext({}),l=function(t){var e=r.useContext(c),n=e;return t&&(n="function"==typeof t?t(e):o(o({},e),t)),n},u=function(t){var e=l(t.components);return r.createElement(c.Provider,{value:e},t.children)},p={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},d=r.forwardRef((function(t,e){var n=t.components,a=t.mdxType,i=t.originalType,c=t.parentName,u=s(t,["components","mdxType","originalType","parentName"]),d=l(n),g=a,f=d["".concat(c,".").concat(g)]||d[g]||p[g]||i;return n?r.createElement(f,o(o({ref:e},u),{},{components:n})):r.createElement(f,o({ref:e},u))}));function g(t,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var i=n.length,o=new Array(i);o[0]=d;var s={};for(var c in e)hasOwnProperty.call(e,c)&&(s[c]=e[c]);s.originalType=t,s.mdxType="string"==typeof t?t:a,o[1]=s;for(var l=2;l<i;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},98e3:function(t,e,n){"use strict";n.r(e),n.d(e,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return u},default:function(){return d}});var r=n(22122),a=n(19756),i=(n(67294),n(3905)),o=["components"],s={id:"tracing",title:"Distributed Tracing"},c=void 0,l={unversionedId:"guides/tracing",id:"guides/tracing",isDocsHomePage:!1,title:"Distributed Tracing",description:"Configuring Distributed Tracing (DT) will enable you to obtain a visualization",source:"@site/docs/guides/tracing.mdx",sourceDirName:"guides",slug:"/guides/tracing",permalink:"/kratos/docs/next/guides/tracing",editUrl:"https://github.com/ory/kratos/edit/master/docs/docs/guides/tracing.mdx",version:"current",lastUpdatedBy:"hackerman",lastUpdatedAt:1623836124,formattedLastUpdatedAt:"6/16/2021",frontMatter:{id:"tracing",title:"Distributed Tracing"},sidebar:"docs",previous:{title:"Integration using Web-Hooks",permalink:"/kratos/docs/next/guides/integration-with-other-systems-using-web-hooks"},next:{title:"HTTP API",permalink:"/kratos/docs/next/reference/api"}},u=[{value:"What a Kratos trace includes",id:"what-a-kratos-trace-includes",children:[]}],p={toc:u};function d(t){var e=t.components,n=(0,a.Z)(t,o);return(0,i.kt)("wrapper",(0,r.Z)({},p,n,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Configuring Distributed Tracing (DT) will enable you to obtain a visualization\nof the call paths that take place in order to process a request made to Kratos.\nIt's yet another tool that you can use to aid you in profiling, debugging and\nultimately understanding your deployment of Kratos better. Kratos currently\nsupports the following tracing options:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Tracing backend(s): Jaeger, Elastic APM, Datadog, Zipkin and Instana - ",(0,i.kt)("em",{parentName:"li"},"Note:\nadding support for other\n",(0,i.kt)("a",{parentName:"em",href:"https://opentracing.io/docs/supported-tracers"},"opentracing compliant backends"),"\nis planned. To aid in priority, please\n",(0,i.kt)("a",{parentName:"em",href:"https://github.com/ory/kratos/issues"},"create an issue")," with your feature\nrequest.")),(0,i.kt)("li",{parentName:"ul"},"Following existing traces: If you have deployed Kratos behind a proxy that has\ninitiated a trace, Kratos will attempt to join that trace by examining the\nrequest headers for tracing context.")),(0,i.kt)("h3",{id:"what-a-kratos-trace-includes"},"What a Kratos trace includes"),(0,i.kt)("p",null,"In DT speak, a trace is comprised of one or more spans which are logical units\nof work. Each Kratos span is encapsulated with the following state:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"A name"),(0,i.kt)("li",{parentName:"ul"},"A start time"),(0,i.kt)("li",{parentName:"ul"},"A finish time"),(0,i.kt)("li",{parentName:"ul"},"A set of zero or more tags")),(0,i.kt)("p",null,"Kratos currently creates the following spans:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Top level span (",(0,i.kt)("em",{parentName:"li"},"named after the request path"),") for the requested endpoint.\nSpan tags: - http method - http status code - error IFF status code >= 400"),(0,i.kt)("li",{parentName:"ul"},"Child span will be created if bcrypt is called. Span tags: - bcrypt work\nfactor"),(0,i.kt)("li",{parentName:"ul"},"All SQL database interactions. Spans/tags will vary depending on the database\ndriver used.")),(0,i.kt)("p",null,"This is still evolving and subject to change as tracing support continues to\nexpand in Kratos. If you see something that is missing/wrong, please create an\nissue."))}d.isMDXComponent=!0}}]);